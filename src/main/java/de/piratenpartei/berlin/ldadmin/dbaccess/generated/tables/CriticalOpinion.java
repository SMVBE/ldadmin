/**
 * This class is generated by jOOQ
 */
package de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CriticalOpinion extends org.jooq.impl.TableImpl<de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.records.CriticalOpinionRecord> {

	private static final long serialVersionUID = 944305210;

	/**
	 * The singleton instance of <code>critical_opinion</code>
	 */
	public static final de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.CriticalOpinion CRITICAL_OPINION = new de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.CriticalOpinion();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.records.CriticalOpinionRecord> getRecordType() {
		return de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.records.CriticalOpinionRecord.class;
	}

	/**
	 * The column <code>critical_opinion.initiative_id</code>.
	 */
	public final org.jooq.TableField<de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.records.CriticalOpinionRecord, java.lang.Integer> INITIATIVE_ID = createField("initiative_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>critical_opinion.suggestion_id</code>.
	 */
	public final org.jooq.TableField<de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.records.CriticalOpinionRecord, java.lang.Long> SUGGESTION_ID = createField("suggestion_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>critical_opinion.member_id</code>.
	 */
	public final org.jooq.TableField<de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.records.CriticalOpinionRecord, java.lang.Integer> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>critical_opinion.degree</code>.
	 */
	public final org.jooq.TableField<de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.records.CriticalOpinionRecord, java.lang.Short> DEGREE = createField("degree", org.jooq.impl.SQLDataType.SMALLINT, this, "");

	/**
	 * The column <code>critical_opinion.fulfilled</code>.
	 */
	public final org.jooq.TableField<de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.records.CriticalOpinionRecord, java.lang.Boolean> FULFILLED = createField("fulfilled", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * Create a <code>critical_opinion</code> table reference
	 */
	public CriticalOpinion() {
		this("critical_opinion", null);
	}

	/**
	 * Create an aliased <code>critical_opinion</code> table reference
	 */
	public CriticalOpinion(java.lang.String alias) {
		this(alias, de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.CriticalOpinion.CRITICAL_OPINION);
	}

	private CriticalOpinion(java.lang.String alias, org.jooq.Table<de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.records.CriticalOpinionRecord> aliased) {
		this(alias, aliased, null);
	}

	private CriticalOpinion(java.lang.String alias, org.jooq.Table<de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.records.CriticalOpinionRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, de.piratenpartei.berlin.ldadmin.dbaccess.generated.DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.CriticalOpinion as(java.lang.String alias) {
		return new de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.CriticalOpinion(alias, this);
	}

	/**
	 * Rename this table
	 */
	public de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.CriticalOpinion rename(java.lang.String name) {
		return new de.piratenpartei.berlin.ldadmin.dbaccess.generated.tables.CriticalOpinion(name, null);
	}
}
