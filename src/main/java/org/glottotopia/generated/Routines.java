/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated;

/**
 * This class is generated by jOOQ.
 *
 * Convenience access to all stored procedures and functions in 
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

	/**
	 * Call <code>add_vote_delegations</code>
	 */
	public static void addVoteDelegations(org.jooq.Configuration configuration, java.lang.Integer issueIdP) {
		org.liquidfeedback.generated.routines.AddVoteDelegations p = new org.liquidfeedback.generated.routines.AddVoteDelegations();
		p.setIssueIdP(issueIdP);

		p.execute(configuration);
	}

	/**
	 * Call <code>autocreate_interest_trigger</code>
	 */
	public static java.lang.Object autocreateInterestTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.AutocreateInterestTrigger f = new org.liquidfeedback.generated.routines.AutocreateInterestTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>autocreate_interest_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> autocreateInterestTrigger() {
		org.liquidfeedback.generated.routines.AutocreateInterestTrigger f = new org.liquidfeedback.generated.routines.AutocreateInterestTrigger();

		return f.asField();
	}

	/**
	 * Call <code>autocreate_supporter_trigger</code>
	 */
	public static java.lang.Object autocreateSupporterTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.AutocreateSupporterTrigger f = new org.liquidfeedback.generated.routines.AutocreateSupporterTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>autocreate_supporter_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> autocreateSupporterTrigger() {
		org.liquidfeedback.generated.routines.AutocreateSupporterTrigger f = new org.liquidfeedback.generated.routines.AutocreateSupporterTrigger();

		return f.asField();
	}

	/**
	 * Call <code>autofill_initiative_id_trigger</code>
	 */
	public static java.lang.Object autofillInitiativeIdTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.AutofillInitiativeIdTrigger f = new org.liquidfeedback.generated.routines.AutofillInitiativeIdTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>autofill_initiative_id_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> autofillInitiativeIdTrigger() {
		org.liquidfeedback.generated.routines.AutofillInitiativeIdTrigger f = new org.liquidfeedback.generated.routines.AutofillInitiativeIdTrigger();

		return f.asField();
	}

	/**
	 * Call <code>autofill_issue_id_trigger</code>
	 */
	public static java.lang.Object autofillIssueIdTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.AutofillIssueIdTrigger f = new org.liquidfeedback.generated.routines.AutofillIssueIdTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>autofill_issue_id_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> autofillIssueIdTrigger() {
		org.liquidfeedback.generated.routines.AutofillIssueIdTrigger f = new org.liquidfeedback.generated.routines.AutofillIssueIdTrigger();

		return f.asField();
	}

	/**
	 * Call <code>calculate_member_counts</code>
	 */
	public static void calculateMemberCounts(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.CalculateMemberCounts p = new org.liquidfeedback.generated.routines.CalculateMemberCounts();

		p.execute(configuration);
	}

	/**
	 * Call <code>calculate_ranks</code>
	 */
	public static void calculateRanks(org.jooq.Configuration configuration, java.lang.Integer issueIdP) {
		org.liquidfeedback.generated.routines.CalculateRanks p = new org.liquidfeedback.generated.routines.CalculateRanks();
		p.setIssueIdP(issueIdP);

		p.execute(configuration);
	}

	/**
	 * Call <code>check_activity</code>
	 */
	public static void checkActivity(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.CheckActivity p = new org.liquidfeedback.generated.routines.CheckActivity();

		p.execute(configuration);
	}

	/**
	 * Call <code>check_everything</code>
	 */
	public static void checkEverything(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.CheckEverything p = new org.liquidfeedback.generated.routines.CheckEverything();

		p.execute(configuration);
	}

	/**
	 * Call <code>check_issue</code>
	 */
	public static org.liquidfeedback.generated.udt.records.CheckIssuePersistenceRecord checkIssue(org.jooq.Configuration configuration, java.lang.Integer issueIdP, org.liquidfeedback.generated.udt.records.CheckIssuePersistenceRecord persist) {
		org.liquidfeedback.generated.routines.CheckIssue f = new org.liquidfeedback.generated.routines.CheckIssue();
		f.setIssueIdP(issueIdP);
		f.setPersist(persist);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>check_issue</code> as a field
	 */
	public static org.jooq.Field<org.liquidfeedback.generated.udt.records.CheckIssuePersistenceRecord> checkIssue(java.lang.Integer issueIdP, org.liquidfeedback.generated.udt.records.CheckIssuePersistenceRecord persist) {
		org.liquidfeedback.generated.routines.CheckIssue f = new org.liquidfeedback.generated.routines.CheckIssue();
		f.setIssueIdP(issueIdP);
		f.setPersist(persist);

		return f.asField();
	}

	/**
	 * Get <code>check_issue</code> as a field
	 */
	public static org.jooq.Field<org.liquidfeedback.generated.udt.records.CheckIssuePersistenceRecord> checkIssue(org.jooq.Field<java.lang.Integer> issueIdP, org.jooq.Field<org.liquidfeedback.generated.udt.records.CheckIssuePersistenceRecord> persist) {
		org.liquidfeedback.generated.routines.CheckIssue f = new org.liquidfeedback.generated.routines.CheckIssue();
		f.setIssueIdP(issueIdP);
		f.setPersist(persist);

		return f.asField();
	}

	/**
	 * Call <code>clean_issue</code>
	 */
	public static void cleanIssue(org.jooq.Configuration configuration, java.lang.Integer issueIdP) {
		org.liquidfeedback.generated.routines.CleanIssue p = new org.liquidfeedback.generated.routines.CleanIssue();
		p.setIssueIdP(issueIdP);

		p.execute(configuration);
	}

	/**
	 * Call <code>close_voting</code>
	 */
	public static void closeVoting(org.jooq.Configuration configuration, java.lang.Integer issueIdP) {
		org.liquidfeedback.generated.routines.CloseVoting p = new org.liquidfeedback.generated.routines.CloseVoting();
		p.setIssueIdP(issueIdP);

		p.execute(configuration);
	}

	/**
	 * Call <code>copy_timings_trigger</code>
	 */
	public static java.lang.Object copyTimingsTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.CopyTimingsTrigger f = new org.liquidfeedback.generated.routines.CopyTimingsTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>copy_timings_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> copyTimingsTrigger() {
		org.liquidfeedback.generated.routines.CopyTimingsTrigger f = new org.liquidfeedback.generated.routines.CopyTimingsTrigger();

		return f.asField();
	}

	/**
	 * Call <code>create_interest_snapshot</code>
	 */
	public static void createInterestSnapshot(org.jooq.Configuration configuration, java.lang.Integer issueIdP) {
		org.liquidfeedback.generated.routines.CreateInterestSnapshot p = new org.liquidfeedback.generated.routines.CreateInterestSnapshot();
		p.setIssueIdP(issueIdP);

		p.execute(configuration);
	}

	/**
	 * Call <code>create_population_snapshot</code>
	 */
	public static void createPopulationSnapshot(org.jooq.Configuration configuration, java.lang.Integer issueIdP) {
		org.liquidfeedback.generated.routines.CreatePopulationSnapshot p = new org.liquidfeedback.generated.routines.CreatePopulationSnapshot();
		p.setIssueIdP(issueIdP);

		p.execute(configuration);
	}

	/**
	 * Call <code>create_snapshot</code>
	 */
	public static void createSnapshot(org.jooq.Configuration configuration, java.lang.Integer issueIdP) {
		org.liquidfeedback.generated.routines.CreateSnapshot p = new org.liquidfeedback.generated.routines.CreateSnapshot();
		p.setIssueIdP(issueIdP);

		p.execute(configuration);
	}

	/**
	 * Call <code>default_for_draft_id_trigger</code>
	 */
	public static java.lang.Object defaultForDraftIdTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.DefaultForDraftIdTrigger f = new org.liquidfeedback.generated.routines.DefaultForDraftIdTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>default_for_draft_id_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> defaultForDraftIdTrigger() {
		org.liquidfeedback.generated.routines.DefaultForDraftIdTrigger f = new org.liquidfeedback.generated.routines.DefaultForDraftIdTrigger();

		return f.asField();
	}

	/**
	 * Call <code>defeat_strength</code>
	 */
	public static java.lang.Long defeatStrength(org.jooq.Configuration configuration, java.lang.Integer positiveVotesP, java.lang.Integer negativeVotesP, org.liquidfeedback.generated.enums.DefeatStrength defeatStrengthP) {
		org.liquidfeedback.generated.routines.DefeatStrength f = new org.liquidfeedback.generated.routines.DefeatStrength();
		f.setPositiveVotesP(positiveVotesP);
		f.setNegativeVotesP(negativeVotesP);
		f.setDefeatStrengthP(defeatStrengthP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>defeat_strength</code> as a field
	 */
	public static org.jooq.Field<java.lang.Long> defeatStrength(java.lang.Integer positiveVotesP, java.lang.Integer negativeVotesP, org.liquidfeedback.generated.enums.DefeatStrength defeatStrengthP) {
		org.liquidfeedback.generated.routines.DefeatStrength f = new org.liquidfeedback.generated.routines.DefeatStrength();
		f.setPositiveVotesP(positiveVotesP);
		f.setNegativeVotesP(negativeVotesP);
		f.setDefeatStrengthP(defeatStrengthP);

		return f.asField();
	}

	/**
	 * Get <code>defeat_strength</code> as a field
	 */
	public static org.jooq.Field<java.lang.Long> defeatStrength(org.jooq.Field<java.lang.Integer> positiveVotesP, org.jooq.Field<java.lang.Integer> negativeVotesP, org.jooq.Field<org.liquidfeedback.generated.enums.DefeatStrength> defeatStrengthP) {
		org.liquidfeedback.generated.routines.DefeatStrength f = new org.liquidfeedback.generated.routines.DefeatStrength();
		f.setPositiveVotesP(positiveVotesP);
		f.setNegativeVotesP(negativeVotesP);
		f.setDefeatStrengthP(defeatStrengthP);

		return f.asField();
	}

	/**
	 * Call <code>delegation_chain</code>
	 */
	public static org.liquidfeedback.generated.udt.records.DelegationChainRowRecord delegationChain(org.jooq.Configuration configuration, java.lang.Integer memberIdP, java.lang.Integer unitIdP, java.lang.Integer areaIdP, java.lang.Integer issueIdP, java.lang.Integer simulateTrusteeIdP, java.lang.Boolean simulateDefaultP) {
		org.liquidfeedback.generated.routines.DelegationChain f = new org.liquidfeedback.generated.routines.DelegationChain();
		f.setMemberIdP(memberIdP);
		f.setUnitIdP(unitIdP);
		f.setAreaIdP(areaIdP);
		f.setIssueIdP(issueIdP);
		f.setSimulateTrusteeIdP(simulateTrusteeIdP);
		f.setSimulateDefaultP(simulateDefaultP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>delegation_chain</code> as a field
	 */
	public static org.jooq.Field<org.liquidfeedback.generated.udt.records.DelegationChainRowRecord> delegationChain(java.lang.Integer memberIdP, java.lang.Integer unitIdP, java.lang.Integer areaIdP, java.lang.Integer issueIdP, java.lang.Integer simulateTrusteeIdP, java.lang.Boolean simulateDefaultP) {
		org.liquidfeedback.generated.routines.DelegationChain f = new org.liquidfeedback.generated.routines.DelegationChain();
		f.setMemberIdP(memberIdP);
		f.setUnitIdP(unitIdP);
		f.setAreaIdP(areaIdP);
		f.setIssueIdP(issueIdP);
		f.setSimulateTrusteeIdP(simulateTrusteeIdP);
		f.setSimulateDefaultP(simulateDefaultP);

		return f.asField();
	}

	/**
	 * Get <code>delegation_chain</code> as a field
	 */
	public static org.jooq.Field<org.liquidfeedback.generated.udt.records.DelegationChainRowRecord> delegationChain(org.jooq.Field<java.lang.Integer> memberIdP, org.jooq.Field<java.lang.Integer> unitIdP, org.jooq.Field<java.lang.Integer> areaIdP, org.jooq.Field<java.lang.Integer> issueIdP, org.jooq.Field<java.lang.Integer> simulateTrusteeIdP, org.jooq.Field<java.lang.Boolean> simulateDefaultP) {
		org.liquidfeedback.generated.routines.DelegationChain f = new org.liquidfeedback.generated.routines.DelegationChain();
		f.setMemberIdP(memberIdP);
		f.setUnitIdP(unitIdP);
		f.setAreaIdP(areaIdP);
		f.setIssueIdP(issueIdP);
		f.setSimulateTrusteeIdP(simulateTrusteeIdP);
		f.setSimulateDefaultP(simulateDefaultP);

		return f.asField();
	}

	/**
	 * Call <code>delegation_chain_for_closed_issue</code>
	 */
	public static org.liquidfeedback.generated.udt.records.DelegationChainRowRecord delegationChainForClosedIssue(org.jooq.Configuration configuration, java.lang.Integer memberIdP, java.lang.Integer issueIdP) {
		org.liquidfeedback.generated.routines.DelegationChainForClosedIssue f = new org.liquidfeedback.generated.routines.DelegationChainForClosedIssue();
		f.setMemberIdP(memberIdP);
		f.setIssueIdP(issueIdP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>delegation_chain_for_closed_issue</code> as a field
	 */
	public static org.jooq.Field<org.liquidfeedback.generated.udt.records.DelegationChainRowRecord> delegationChainForClosedIssue(java.lang.Integer memberIdP, java.lang.Integer issueIdP) {
		org.liquidfeedback.generated.routines.DelegationChainForClosedIssue f = new org.liquidfeedback.generated.routines.DelegationChainForClosedIssue();
		f.setMemberIdP(memberIdP);
		f.setIssueIdP(issueIdP);

		return f.asField();
	}

	/**
	 * Get <code>delegation_chain_for_closed_issue</code> as a field
	 */
	public static org.jooq.Field<org.liquidfeedback.generated.udt.records.DelegationChainRowRecord> delegationChainForClosedIssue(org.jooq.Field<java.lang.Integer> memberIdP, org.jooq.Field<java.lang.Integer> issueIdP) {
		org.liquidfeedback.generated.routines.DelegationChainForClosedIssue f = new org.liquidfeedback.generated.routines.DelegationChainForClosedIssue();
		f.setMemberIdP(memberIdP);
		f.setIssueIdP(issueIdP);

		return f.asField();
	}

	/**
	 * Call <code>delegation_info</code>
	 */
	public static org.liquidfeedback.generated.udt.records.DelegationInfoTypeRecord delegationInfo(org.jooq.Configuration configuration, java.lang.Integer memberIdP, java.lang.Integer unitIdP, java.lang.Integer areaIdP, java.lang.Integer issueIdP, java.lang.Integer simulateTrusteeIdP, java.lang.Boolean simulateDefaultP) {
		org.liquidfeedback.generated.routines.DelegationInfo f = new org.liquidfeedback.generated.routines.DelegationInfo();
		f.setMemberIdP(memberIdP);
		f.setUnitIdP(unitIdP);
		f.setAreaIdP(areaIdP);
		f.setIssueIdP(issueIdP);
		f.setSimulateTrusteeIdP(simulateTrusteeIdP);
		f.setSimulateDefaultP(simulateDefaultP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>delegation_info</code> as a field
	 */
	public static org.jooq.Field<org.liquidfeedback.generated.udt.records.DelegationInfoTypeRecord> delegationInfo(java.lang.Integer memberIdP, java.lang.Integer unitIdP, java.lang.Integer areaIdP, java.lang.Integer issueIdP, java.lang.Integer simulateTrusteeIdP, java.lang.Boolean simulateDefaultP) {
		org.liquidfeedback.generated.routines.DelegationInfo f = new org.liquidfeedback.generated.routines.DelegationInfo();
		f.setMemberIdP(memberIdP);
		f.setUnitIdP(unitIdP);
		f.setAreaIdP(areaIdP);
		f.setIssueIdP(issueIdP);
		f.setSimulateTrusteeIdP(simulateTrusteeIdP);
		f.setSimulateDefaultP(simulateDefaultP);

		return f.asField();
	}

	/**
	 * Get <code>delegation_info</code> as a field
	 */
	public static org.jooq.Field<org.liquidfeedback.generated.udt.records.DelegationInfoTypeRecord> delegationInfo(org.jooq.Field<java.lang.Integer> memberIdP, org.jooq.Field<java.lang.Integer> unitIdP, org.jooq.Field<java.lang.Integer> areaIdP, org.jooq.Field<java.lang.Integer> issueIdP, org.jooq.Field<java.lang.Integer> simulateTrusteeIdP, org.jooq.Field<java.lang.Boolean> simulateDefaultP) {
		org.liquidfeedback.generated.routines.DelegationInfo f = new org.liquidfeedback.generated.routines.DelegationInfo();
		f.setMemberIdP(memberIdP);
		f.setUnitIdP(unitIdP);
		f.setAreaIdP(areaIdP);
		f.setIssueIdP(issueIdP);
		f.setSimulateTrusteeIdP(simulateTrusteeIdP);
		f.setSimulateDefaultP(simulateDefaultP);

		return f.asField();
	}

	/**
	 * Call <code>delete_member</code>
	 */
	public static void deleteMember(org.jooq.Configuration configuration, java.lang.Integer memberIdP) {
		org.liquidfeedback.generated.routines.DeleteMember p = new org.liquidfeedback.generated.routines.DeleteMember();
		p.setMemberIdP(memberIdP);

		p.execute(configuration);
	}

	/**
	 * Call <code>delete_private_data</code>
	 */
	public static void deletePrivateData(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.DeletePrivateData p = new org.liquidfeedback.generated.routines.DeletePrivateData();

		p.execute(configuration);
	}

	/**
	 * Call <code>direct_voter_deletes_non_voter_trigger</code>
	 */
	public static java.lang.Object directVoterDeletesNonVoterTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.DirectVoterDeletesNonVoterTrigger f = new org.liquidfeedback.generated.routines.DirectVoterDeletesNonVoterTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>direct_voter_deletes_non_voter_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> directVoterDeletesNonVoterTrigger() {
		org.liquidfeedback.generated.routines.DirectVoterDeletesNonVoterTrigger f = new org.liquidfeedback.generated.routines.DirectVoterDeletesNonVoterTrigger();

		return f.asField();
	}

	/**
	 * Call <code>dont_require_transaction_isolation</code>
	 */
	public static void dontRequireTransactionIsolation(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.DontRequireTransactionIsolation p = new org.liquidfeedback.generated.routines.DontRequireTransactionIsolation();

		p.execute(configuration);
	}

	/**
	 * Call <code>find_best_paths</code>
	 */
	public static org.liquidfeedback.generated.udt.records.LinkStrengthRecord[] findBestPaths(org.jooq.Configuration configuration, org.liquidfeedback.generated.udt.records.LinkStrengthRecord[] matrixD) {
		org.liquidfeedback.generated.routines.FindBestPaths f = new org.liquidfeedback.generated.routines.FindBestPaths();
		f.setMatrixD(matrixD);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>find_best_paths</code> as a field
	 */
	public static org.jooq.Field<org.liquidfeedback.generated.udt.records.LinkStrengthRecord[]> findBestPaths(org.liquidfeedback.generated.udt.records.LinkStrengthRecord[] matrixD) {
		org.liquidfeedback.generated.routines.FindBestPaths f = new org.liquidfeedback.generated.routines.FindBestPaths();
		f.setMatrixD(matrixD);

		return f.asField();
	}

	/**
	 * Get <code>find_best_paths</code> as a field
	 */
	public static org.jooq.Field<org.liquidfeedback.generated.udt.records.LinkStrengthRecord[]> findBestPaths(org.jooq.Field<org.liquidfeedback.generated.udt.records.LinkStrengthRecord[]> matrixD) {
		org.liquidfeedback.generated.routines.FindBestPaths f = new org.liquidfeedback.generated.routines.FindBestPaths();
		f.setMatrixD(matrixD);

		return f.asField();
	}

	/**
	 * Call <code>forbid_changes_on_closed_issue_trigger</code>
	 */
	public static java.lang.Object forbidChangesOnClosedIssueTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.ForbidChangesOnClosedIssueTrigger f = new org.liquidfeedback.generated.routines.ForbidChangesOnClosedIssueTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>forbid_changes_on_closed_issue_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> forbidChangesOnClosedIssueTrigger() {
		org.liquidfeedback.generated.routines.ForbidChangesOnClosedIssueTrigger f = new org.liquidfeedback.generated.routines.ForbidChangesOnClosedIssueTrigger();

		return f.asField();
	}

	/**
	 * Call <code>highlight</code>
	 */
	public static java.lang.String highlight(org.jooq.Configuration configuration, java.lang.String bodyP, java.lang.String queryTextP) {
		org.liquidfeedback.generated.routines.Highlight f = new org.liquidfeedback.generated.routines.Highlight();
		f.setBodyP(bodyP);
		f.setQueryTextP(queryTextP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>highlight</code> as a field
	 */
	public static org.jooq.Field<java.lang.String> highlight(java.lang.String bodyP, java.lang.String queryTextP) {
		org.liquidfeedback.generated.routines.Highlight f = new org.liquidfeedback.generated.routines.Highlight();
		f.setBodyP(bodyP);
		f.setQueryTextP(queryTextP);

		return f.asField();
	}

	/**
	 * Get <code>highlight</code> as a field
	 */
	public static org.jooq.Field<java.lang.String> highlight(org.jooq.Field<java.lang.String> bodyP, org.jooq.Field<java.lang.String> queryTextP) {
		org.liquidfeedback.generated.routines.Highlight f = new org.liquidfeedback.generated.routines.Highlight();
		f.setBodyP(bodyP);
		f.setQueryTextP(queryTextP);

		return f.asField();
	}

	/**
	 * Call <code>initiative_requires_first_draft_trigger</code>
	 */
	public static java.lang.Object initiativeRequiresFirstDraftTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.InitiativeRequiresFirstDraftTrigger f = new org.liquidfeedback.generated.routines.InitiativeRequiresFirstDraftTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>initiative_requires_first_draft_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> initiativeRequiresFirstDraftTrigger() {
		org.liquidfeedback.generated.routines.InitiativeRequiresFirstDraftTrigger f = new org.liquidfeedback.generated.routines.InitiativeRequiresFirstDraftTrigger();

		return f.asField();
	}

	/**
	 * Call <code>issue_requires_first_initiative_trigger</code>
	 */
	public static java.lang.Object issueRequiresFirstInitiativeTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.IssueRequiresFirstInitiativeTrigger f = new org.liquidfeedback.generated.routines.IssueRequiresFirstInitiativeTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>issue_requires_first_initiative_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> issueRequiresFirstInitiativeTrigger() {
		org.liquidfeedback.generated.routines.IssueRequiresFirstInitiativeTrigger f = new org.liquidfeedback.generated.routines.IssueRequiresFirstInitiativeTrigger();

		return f.asField();
	}

	/**
	 * Call <code>last_draft_deletes_initiative_trigger</code>
	 */
	public static java.lang.Object lastDraftDeletesInitiativeTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.LastDraftDeletesInitiativeTrigger f = new org.liquidfeedback.generated.routines.LastDraftDeletesInitiativeTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>last_draft_deletes_initiative_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> lastDraftDeletesInitiativeTrigger() {
		org.liquidfeedback.generated.routines.LastDraftDeletesInitiativeTrigger f = new org.liquidfeedback.generated.routines.LastDraftDeletesInitiativeTrigger();

		return f.asField();
	}

	/**
	 * Call <code>last_initiative_deletes_issue_trigger</code>
	 */
	public static java.lang.Object lastInitiativeDeletesIssueTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.LastInitiativeDeletesIssueTrigger f = new org.liquidfeedback.generated.routines.LastInitiativeDeletesIssueTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>last_initiative_deletes_issue_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> lastInitiativeDeletesIssueTrigger() {
		org.liquidfeedback.generated.routines.LastInitiativeDeletesIssueTrigger f = new org.liquidfeedback.generated.routines.LastInitiativeDeletesIssueTrigger();

		return f.asField();
	}

	/**
	 * Call <code>last_opinion_deletes_suggestion_trigger</code>
	 */
	public static java.lang.Object lastOpinionDeletesSuggestionTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.LastOpinionDeletesSuggestionTrigger f = new org.liquidfeedback.generated.routines.LastOpinionDeletesSuggestionTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>last_opinion_deletes_suggestion_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> lastOpinionDeletesSuggestionTrigger() {
		org.liquidfeedback.generated.routines.LastOpinionDeletesSuggestionTrigger f = new org.liquidfeedback.generated.routines.LastOpinionDeletesSuggestionTrigger();

		return f.asField();
	}

	/**
	 * Call <code>membership_weight</code>
	 */
	public static java.lang.Integer membershipWeight(org.jooq.Configuration configuration, java.lang.Integer areaIdP, java.lang.Integer memberIdP) {
		org.liquidfeedback.generated.routines.MembershipWeight f = new org.liquidfeedback.generated.routines.MembershipWeight();
		f.setAreaIdP(areaIdP);
		f.setMemberIdP(memberIdP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>membership_weight</code> as a field
	 */
	public static org.jooq.Field<java.lang.Integer> membershipWeight(java.lang.Integer areaIdP, java.lang.Integer memberIdP) {
		org.liquidfeedback.generated.routines.MembershipWeight f = new org.liquidfeedback.generated.routines.MembershipWeight();
		f.setAreaIdP(areaIdP);
		f.setMemberIdP(memberIdP);

		return f.asField();
	}

	/**
	 * Get <code>membership_weight</code> as a field
	 */
	public static org.jooq.Field<java.lang.Integer> membershipWeight(org.jooq.Field<java.lang.Integer> areaIdP, org.jooq.Field<java.lang.Integer> memberIdP) {
		org.liquidfeedback.generated.routines.MembershipWeight f = new org.liquidfeedback.generated.routines.MembershipWeight();
		f.setAreaIdP(areaIdP);
		f.setMemberIdP(memberIdP);

		return f.asField();
	}

	/**
	 * Call <code>membership_weight_with_skipping</code>
	 */
	public static java.lang.Integer membershipWeightWithSkipping(org.jooq.Configuration configuration, java.lang.Integer areaIdP, java.lang.Integer memberIdP, java.lang.Integer[] skipMemberIdsP) {
		org.liquidfeedback.generated.routines.MembershipWeightWithSkipping f = new org.liquidfeedback.generated.routines.MembershipWeightWithSkipping();
		f.setAreaIdP(areaIdP);
		f.setMemberIdP(memberIdP);
		f.setSkipMemberIdsP(skipMemberIdsP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>membership_weight_with_skipping</code> as a field
	 */
	public static org.jooq.Field<java.lang.Integer> membershipWeightWithSkipping(java.lang.Integer areaIdP, java.lang.Integer memberIdP, java.lang.Integer[] skipMemberIdsP) {
		org.liquidfeedback.generated.routines.MembershipWeightWithSkipping f = new org.liquidfeedback.generated.routines.MembershipWeightWithSkipping();
		f.setAreaIdP(areaIdP);
		f.setMemberIdP(memberIdP);
		f.setSkipMemberIdsP(skipMemberIdsP);

		return f.asField();
	}

	/**
	 * Get <code>membership_weight_with_skipping</code> as a field
	 */
	public static org.jooq.Field<java.lang.Integer> membershipWeightWithSkipping(org.jooq.Field<java.lang.Integer> areaIdP, org.jooq.Field<java.lang.Integer> memberIdP, org.jooq.Field<java.lang.Integer[]> skipMemberIdsP) {
		org.liquidfeedback.generated.routines.MembershipWeightWithSkipping f = new org.liquidfeedback.generated.routines.MembershipWeightWithSkipping();
		f.setAreaIdP(areaIdP);
		f.setMemberIdP(memberIdP);
		f.setSkipMemberIdsP(skipMemberIdsP);

		return f.asField();
	}

	/**
	 * Call <code>non_voter_deletes_direct_voter_trigger</code>
	 */
	public static java.lang.Object nonVoterDeletesDirectVoterTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.NonVoterDeletesDirectVoterTrigger f = new org.liquidfeedback.generated.routines.NonVoterDeletesDirectVoterTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>non_voter_deletes_direct_voter_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> nonVoterDeletesDirectVoterTrigger() {
		org.liquidfeedback.generated.routines.NonVoterDeletesDirectVoterTrigger f = new org.liquidfeedback.generated.routines.NonVoterDeletesDirectVoterTrigger();

		return f.asField();
	}

	/**
	 * Call <code>require_transaction_isolation</code>
	 */
	public static void requireTransactionIsolation(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.RequireTransactionIsolation p = new org.liquidfeedback.generated.routines.RequireTransactionIsolation();

		p.execute(configuration);
	}

	/**
	 * Call <code>secondary_link_strength</code>
	 */
	public static java.lang.Long secondaryLinkStrength(org.jooq.Configuration configuration, java.lang.Integer initiative1OrdP, java.lang.Integer initiative2OrdP, org.liquidfeedback.generated.enums.TieBreaking tieBreakingP) {
		org.liquidfeedback.generated.routines.SecondaryLinkStrength f = new org.liquidfeedback.generated.routines.SecondaryLinkStrength();
		f.setInitiative1OrdP(initiative1OrdP);
		f.setInitiative2OrdP(initiative2OrdP);
		f.setTieBreakingP(tieBreakingP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>secondary_link_strength</code> as a field
	 */
	public static org.jooq.Field<java.lang.Long> secondaryLinkStrength(java.lang.Integer initiative1OrdP, java.lang.Integer initiative2OrdP, org.liquidfeedback.generated.enums.TieBreaking tieBreakingP) {
		org.liquidfeedback.generated.routines.SecondaryLinkStrength f = new org.liquidfeedback.generated.routines.SecondaryLinkStrength();
		f.setInitiative1OrdP(initiative1OrdP);
		f.setInitiative2OrdP(initiative2OrdP);
		f.setTieBreakingP(tieBreakingP);

		return f.asField();
	}

	/**
	 * Get <code>secondary_link_strength</code> as a field
	 */
	public static org.jooq.Field<java.lang.Long> secondaryLinkStrength(org.jooq.Field<java.lang.Integer> initiative1OrdP, org.jooq.Field<java.lang.Integer> initiative2OrdP, org.jooq.Field<org.liquidfeedback.generated.enums.TieBreaking> tieBreakingP) {
		org.liquidfeedback.generated.routines.SecondaryLinkStrength f = new org.liquidfeedback.generated.routines.SecondaryLinkStrength();
		f.setInitiative1OrdP(initiative1OrdP);
		f.setInitiative2OrdP(initiative2OrdP);
		f.setTieBreakingP(tieBreakingP);

		return f.asField();
	}

	/**
	 * Call <code>set_harmonic_initiative_weights</code>
	 */
	public static void setHarmonicInitiativeWeights(org.jooq.Configuration configuration, java.lang.Integer issueIdP) {
		org.liquidfeedback.generated.routines.SetHarmonicInitiativeWeights p = new org.liquidfeedback.generated.routines.SetHarmonicInitiativeWeights();
		p.setIssueIdP(issueIdP);

		p.execute(configuration);
	}

	/**
	 * Call <code>set_snapshot_event</code>
	 */
	public static void setSnapshotEvent(org.jooq.Configuration configuration, java.lang.Integer issueIdP, org.liquidfeedback.generated.enums.SnapshotEvent eventP) {
		org.liquidfeedback.generated.routines.SetSnapshotEvent p = new org.liquidfeedback.generated.routines.SetSnapshotEvent();
		p.setIssueIdP(issueIdP);
		p.setEventP(eventP);

		p.execute(configuration);
	}

	/**
	 * Call <code>suggestion_requires_first_opinion_trigger</code>
	 */
	public static java.lang.Object suggestionRequiresFirstOpinionTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.SuggestionRequiresFirstOpinionTrigger f = new org.liquidfeedback.generated.routines.SuggestionRequiresFirstOpinionTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>suggestion_requires_first_opinion_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> suggestionRequiresFirstOpinionTrigger() {
		org.liquidfeedback.generated.routines.SuggestionRequiresFirstOpinionTrigger f = new org.liquidfeedback.generated.routines.SuggestionRequiresFirstOpinionTrigger();

		return f.asField();
	}

	/**
	 * Call <code>text_search_query</code>
	 */
	public static java.lang.Object textSearchQuery(org.jooq.Configuration configuration, java.lang.String queryTextP) {
		org.liquidfeedback.generated.routines.TextSearchQuery f = new org.liquidfeedback.generated.routines.TextSearchQuery();
		f.setQueryTextP(queryTextP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>text_search_query</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> textSearchQuery(java.lang.String queryTextP) {
		org.liquidfeedback.generated.routines.TextSearchQuery f = new org.liquidfeedback.generated.routines.TextSearchQuery();
		f.setQueryTextP(queryTextP);

		return f.asField();
	}

	/**
	 * Get <code>text_search_query</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> textSearchQuery(org.jooq.Field<java.lang.String> queryTextP) {
		org.liquidfeedback.generated.routines.TextSearchQuery f = new org.liquidfeedback.generated.routines.TextSearchQuery();
		f.setQueryTextP(queryTextP);

		return f.asField();
	}

	/**
	 * Call <code>voter_comment_fields_only_set_when_voter_comment_is_set_trigger</code>
	 */
	public static java.lang.Object voterCommentFieldsOnlySetWhenVoterCommentIsSetTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.VoterCommentFieldsOnlySetWhenVoterCommentIsSetTrigger f = new org.liquidfeedback.generated.routines.VoterCommentFieldsOnlySetWhenVoterCommentIsSetTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>voter_comment_fields_only_set_when_voter_comment_is_set_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> voterCommentFieldsOnlySetWhenVoterCommentIsSetTrigger() {
		org.liquidfeedback.generated.routines.VoterCommentFieldsOnlySetWhenVoterCommentIsSetTrigger f = new org.liquidfeedback.generated.routines.VoterCommentFieldsOnlySetWhenVoterCommentIsSetTrigger();

		return f.asField();
	}

	/**
	 * Call <code>weight_of_added_delegations_for_interest_snapshot</code>
	 */
	public static java.lang.Integer weightOfAddedDelegationsForInterestSnapshot(org.jooq.Configuration configuration, java.lang.Integer issueIdP, java.lang.Integer memberIdP, java.lang.Integer[] delegateMemberIdsP) {
		org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForInterestSnapshot f = new org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForInterestSnapshot();
		f.setIssueIdP(issueIdP);
		f.setMemberIdP(memberIdP);
		f.setDelegateMemberIdsP(delegateMemberIdsP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>weight_of_added_delegations_for_interest_snapshot</code> as a field
	 */
	public static org.jooq.Field<java.lang.Integer> weightOfAddedDelegationsForInterestSnapshot(java.lang.Integer issueIdP, java.lang.Integer memberIdP, java.lang.Integer[] delegateMemberIdsP) {
		org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForInterestSnapshot f = new org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForInterestSnapshot();
		f.setIssueIdP(issueIdP);
		f.setMemberIdP(memberIdP);
		f.setDelegateMemberIdsP(delegateMemberIdsP);

		return f.asField();
	}

	/**
	 * Get <code>weight_of_added_delegations_for_interest_snapshot</code> as a field
	 */
	public static org.jooq.Field<java.lang.Integer> weightOfAddedDelegationsForInterestSnapshot(org.jooq.Field<java.lang.Integer> issueIdP, org.jooq.Field<java.lang.Integer> memberIdP, org.jooq.Field<java.lang.Integer[]> delegateMemberIdsP) {
		org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForInterestSnapshot f = new org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForInterestSnapshot();
		f.setIssueIdP(issueIdP);
		f.setMemberIdP(memberIdP);
		f.setDelegateMemberIdsP(delegateMemberIdsP);

		return f.asField();
	}

	/**
	 * Call <code>weight_of_added_delegations_for_population_snapshot</code>
	 */
	public static java.lang.Integer weightOfAddedDelegationsForPopulationSnapshot(org.jooq.Configuration configuration, java.lang.Integer issueIdP, java.lang.Integer memberIdP, java.lang.Integer[] delegateMemberIdsP) {
		org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForPopulationSnapshot f = new org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForPopulationSnapshot();
		f.setIssueIdP(issueIdP);
		f.setMemberIdP(memberIdP);
		f.setDelegateMemberIdsP(delegateMemberIdsP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>weight_of_added_delegations_for_population_snapshot</code> as a field
	 */
	public static org.jooq.Field<java.lang.Integer> weightOfAddedDelegationsForPopulationSnapshot(java.lang.Integer issueIdP, java.lang.Integer memberIdP, java.lang.Integer[] delegateMemberIdsP) {
		org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForPopulationSnapshot f = new org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForPopulationSnapshot();
		f.setIssueIdP(issueIdP);
		f.setMemberIdP(memberIdP);
		f.setDelegateMemberIdsP(delegateMemberIdsP);

		return f.asField();
	}

	/**
	 * Get <code>weight_of_added_delegations_for_population_snapshot</code> as a field
	 */
	public static org.jooq.Field<java.lang.Integer> weightOfAddedDelegationsForPopulationSnapshot(org.jooq.Field<java.lang.Integer> issueIdP, org.jooq.Field<java.lang.Integer> memberIdP, org.jooq.Field<java.lang.Integer[]> delegateMemberIdsP) {
		org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForPopulationSnapshot f = new org.liquidfeedback.generated.routines.WeightOfAddedDelegationsForPopulationSnapshot();
		f.setIssueIdP(issueIdP);
		f.setMemberIdP(memberIdP);
		f.setDelegateMemberIdsP(delegateMemberIdsP);

		return f.asField();
	}

	/**
	 * Call <code>weight_of_added_vote_delegations</code>
	 */
	public static java.lang.Integer weightOfAddedVoteDelegations(org.jooq.Configuration configuration, java.lang.Integer issueIdP, java.lang.Integer memberIdP, java.lang.Integer[] delegateMemberIdsP) {
		org.liquidfeedback.generated.routines.WeightOfAddedVoteDelegations f = new org.liquidfeedback.generated.routines.WeightOfAddedVoteDelegations();
		f.setIssueIdP(issueIdP);
		f.setMemberIdP(memberIdP);
		f.setDelegateMemberIdsP(delegateMemberIdsP);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>weight_of_added_vote_delegations</code> as a field
	 */
	public static org.jooq.Field<java.lang.Integer> weightOfAddedVoteDelegations(java.lang.Integer issueIdP, java.lang.Integer memberIdP, java.lang.Integer[] delegateMemberIdsP) {
		org.liquidfeedback.generated.routines.WeightOfAddedVoteDelegations f = new org.liquidfeedback.generated.routines.WeightOfAddedVoteDelegations();
		f.setIssueIdP(issueIdP);
		f.setMemberIdP(memberIdP);
		f.setDelegateMemberIdsP(delegateMemberIdsP);

		return f.asField();
	}

	/**
	 * Get <code>weight_of_added_vote_delegations</code> as a field
	 */
	public static org.jooq.Field<java.lang.Integer> weightOfAddedVoteDelegations(org.jooq.Field<java.lang.Integer> issueIdP, org.jooq.Field<java.lang.Integer> memberIdP, org.jooq.Field<java.lang.Integer[]> delegateMemberIdsP) {
		org.liquidfeedback.generated.routines.WeightOfAddedVoteDelegations f = new org.liquidfeedback.generated.routines.WeightOfAddedVoteDelegations();
		f.setIssueIdP(issueIdP);
		f.setMemberIdP(memberIdP);
		f.setDelegateMemberIdsP(delegateMemberIdsP);

		return f.asField();
	}

	/**
	 * Call <code>write_event_initiative_or_draft_created_trigger</code>
	 */
	public static java.lang.Object writeEventInitiativeOrDraftCreatedTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.WriteEventInitiativeOrDraftCreatedTrigger f = new org.liquidfeedback.generated.routines.WriteEventInitiativeOrDraftCreatedTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>write_event_initiative_or_draft_created_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> writeEventInitiativeOrDraftCreatedTrigger() {
		org.liquidfeedback.generated.routines.WriteEventInitiativeOrDraftCreatedTrigger f = new org.liquidfeedback.generated.routines.WriteEventInitiativeOrDraftCreatedTrigger();

		return f.asField();
	}

	/**
	 * Call <code>write_event_initiative_revoked_trigger</code>
	 */
	public static java.lang.Object writeEventInitiativeRevokedTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.WriteEventInitiativeRevokedTrigger f = new org.liquidfeedback.generated.routines.WriteEventInitiativeRevokedTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>write_event_initiative_revoked_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> writeEventInitiativeRevokedTrigger() {
		org.liquidfeedback.generated.routines.WriteEventInitiativeRevokedTrigger f = new org.liquidfeedback.generated.routines.WriteEventInitiativeRevokedTrigger();

		return f.asField();
	}

	/**
	 * Call <code>write_event_issue_state_changed_trigger</code>
	 */
	public static java.lang.Object writeEventIssueStateChangedTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.WriteEventIssueStateChangedTrigger f = new org.liquidfeedback.generated.routines.WriteEventIssueStateChangedTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>write_event_issue_state_changed_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> writeEventIssueStateChangedTrigger() {
		org.liquidfeedback.generated.routines.WriteEventIssueStateChangedTrigger f = new org.liquidfeedback.generated.routines.WriteEventIssueStateChangedTrigger();

		return f.asField();
	}

	/**
	 * Call <code>write_event_suggestion_created_trigger</code>
	 */
	public static java.lang.Object writeEventSuggestionCreatedTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.WriteEventSuggestionCreatedTrigger f = new org.liquidfeedback.generated.routines.WriteEventSuggestionCreatedTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>write_event_suggestion_created_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> writeEventSuggestionCreatedTrigger() {
		org.liquidfeedback.generated.routines.WriteEventSuggestionCreatedTrigger f = new org.liquidfeedback.generated.routines.WriteEventSuggestionCreatedTrigger();

		return f.asField();
	}

	/**
	 * Call <code>write_member_history_trigger</code>
	 */
	public static java.lang.Object writeMemberHistoryTrigger(org.jooq.Configuration configuration) {
		org.liquidfeedback.generated.routines.WriteMemberHistoryTrigger f = new org.liquidfeedback.generated.routines.WriteMemberHistoryTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>write_member_history_trigger</code> as a field
	 */
	public static org.jooq.Field<java.lang.Object> writeMemberHistoryTrigger() {
		org.liquidfeedback.generated.routines.WriteMemberHistoryTrigger f = new org.liquidfeedback.generated.routines.WriteMemberHistoryTrigger();

		return f.asField();
	}
}
