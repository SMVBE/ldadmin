/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Contingent extends org.jooq.impl.TableImpl<org.liquidfeedback.generated.tables.records.ContingentRecord> {

	private static final long serialVersionUID = -1418889827;

	/**
	 * The singleton instance of <code>contingent</code>
	 */
	public static final org.liquidfeedback.generated.tables.Contingent CONTINGENT = new org.liquidfeedback.generated.tables.Contingent();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.liquidfeedback.generated.tables.records.ContingentRecord> getRecordType() {
		return org.liquidfeedback.generated.tables.records.ContingentRecord.class;
	}

	/**
	 * The column <code>contingent.polling</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.ContingentRecord, java.lang.Boolean> POLLING = createField("polling", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * The column <code>contingent.time_frame</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.ContingentRecord, java.lang.Object> TIME_FRAME = createField("time_frame", org.jooq.impl.DefaultDataType.getDefaultDataType("interval"), this, "");

	/**
	 * The column <code>contingent.text_entry_limit</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.ContingentRecord, java.lang.Integer> TEXT_ENTRY_LIMIT = createField("text_entry_limit", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>contingent.initiative_limit</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.ContingentRecord, java.lang.Integer> INITIATIVE_LIMIT = createField("initiative_limit", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>contingent</code> table reference
	 */
	public Contingent() {
		this("contingent", null);
	}

	/**
	 * Create an aliased <code>contingent</code> table reference
	 */
	public Contingent(java.lang.String alias) {
		this(alias, org.liquidfeedback.generated.tables.Contingent.CONTINGENT);
	}

	private Contingent(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.ContingentRecord> aliased) {
		this(alias, aliased, null);
	}

	private Contingent(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.ContingentRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.liquidfeedback.generated.DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.ContingentRecord> getPrimaryKey() {
		return org.liquidfeedback.generated.Keys.CONTINGENT_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.ContingentRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.ContingentRecord>>asList(org.liquidfeedback.generated.Keys.CONTINGENT_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.tables.Contingent as(java.lang.String alias) {
		return new org.liquidfeedback.generated.tables.Contingent(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.liquidfeedback.generated.tables.Contingent rename(java.lang.String name) {
		return new org.liquidfeedback.generated.tables.Contingent(name, null);
	}
}
