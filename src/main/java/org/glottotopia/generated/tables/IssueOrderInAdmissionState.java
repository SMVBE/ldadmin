/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IssueOrderInAdmissionState extends org.jooq.impl.TableImpl<org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord> {

	private static final long serialVersionUID = 1097004115;

	/**
	 * The singleton instance of <code>issue_order_in_admission_state</code>
	 */
	public static final org.liquidfeedback.generated.tables.IssueOrderInAdmissionState ISSUE_ORDER_IN_ADMISSION_STATE = new org.liquidfeedback.generated.tables.IssueOrderInAdmissionState();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord> getRecordType() {
		return org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord.class;
	}

	/**
	 * The column <code>issue_order_in_admission_state.id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>issue_order_in_admission_state.order_in_area</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord, java.lang.Integer> ORDER_IN_AREA = createField("order_in_area", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>issue_order_in_admission_state.order_in_unit</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord, java.lang.Integer> ORDER_IN_UNIT = createField("order_in_unit", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>issue_order_in_admission_state</code> table reference
	 */
	public IssueOrderInAdmissionState() {
		this("issue_order_in_admission_state", null);
	}

	/**
	 * Create an aliased <code>issue_order_in_admission_state</code> table reference
	 */
	public IssueOrderInAdmissionState(java.lang.String alias) {
		this(alias, org.liquidfeedback.generated.tables.IssueOrderInAdmissionState.ISSUE_ORDER_IN_ADMISSION_STATE);
	}

	private IssueOrderInAdmissionState(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord> aliased) {
		this(alias, aliased, null);
	}

	private IssueOrderInAdmissionState(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.liquidfeedback.generated.DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord> getPrimaryKey() {
		return org.liquidfeedback.generated.Keys.ISSUE_ORDER_IN_ADMISSION_STATE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.IssueOrderInAdmissionStateRecord>>asList(org.liquidfeedback.generated.Keys.ISSUE_ORDER_IN_ADMISSION_STATE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.tables.IssueOrderInAdmissionState as(java.lang.String alias) {
		return new org.liquidfeedback.generated.tables.IssueOrderInAdmissionState(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.liquidfeedback.generated.tables.IssueOrderInAdmissionState rename(java.lang.String name) {
		return new org.liquidfeedback.generated.tables.IssueOrderInAdmissionState(name, null);
	}
}
