/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Member extends org.jooq.impl.TableImpl<org.liquidfeedback.generated.tables.records.MemberRecord> {

	private static final long serialVersionUID = 1446375796;

	/**
	 * The singleton instance of <code>member</code>
	 */
	public static final org.liquidfeedback.generated.tables.Member MEMBER = new org.liquidfeedback.generated.tables.Member();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.liquidfeedback.generated.tables.records.MemberRecord> getRecordType() {
		return org.liquidfeedback.generated.tables.records.MemberRecord.class;
	}

	/**
	 * The column <code>member.id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>member.created</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>member.invite_code</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> INVITE_CODE = createField("invite_code", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.invite_code_expiry</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Timestamp> INVITE_CODE_EXPIRY = createField("invite_code_expiry", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>member.admin_comment</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> ADMIN_COMMENT = createField("admin_comment", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.activated</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Timestamp> ACTIVATED = createField("activated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>member.last_activity</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Date> LAST_ACTIVITY = createField("last_activity", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>member.last_login</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Timestamp> LAST_LOGIN = createField("last_login", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>member.last_delegation_check</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Timestamp> LAST_DELEGATION_CHECK = createField("last_delegation_check", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>member.login</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> LOGIN = createField("login", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.password</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.authority</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> AUTHORITY = createField("authority", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.authority_uid</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> AUTHORITY_UID = createField("authority_uid", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.authority_login</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> AUTHORITY_LOGIN = createField("authority_login", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.locked</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.Boolean> LOCKED = createField("locked", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>member.active</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>member.admin</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.Boolean> ADMIN = createField("admin", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>member.lang</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> LANG = createField("lang", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.notify_email</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> NOTIFY_EMAIL = createField("notify_email", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.notify_email_unconfirmed</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> NOTIFY_EMAIL_UNCONFIRMED = createField("notify_email_unconfirmed", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.notify_email_secret</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> NOTIFY_EMAIL_SECRET = createField("notify_email_secret", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.notify_email_secret_expiry</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Timestamp> NOTIFY_EMAIL_SECRET_EXPIRY = createField("notify_email_secret_expiry", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>member.notify_email_lock_expiry</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Timestamp> NOTIFY_EMAIL_LOCK_EXPIRY = createField("notify_email_lock_expiry", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>member.notify_level</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, org.liquidfeedback.generated.enums.NotifyLevel> NOTIFY_LEVEL = createField("notify_level", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(org.liquidfeedback.generated.enums.NotifyLevel.class), this, "");

	/**
	 * The column <code>member.login_recovery_expiry</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Timestamp> LOGIN_RECOVERY_EXPIRY = createField("login_recovery_expiry", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>member.password_reset_secret</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> PASSWORD_RESET_SECRET = createField("password_reset_secret", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.password_reset_secret_expiry</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Timestamp> PASSWORD_RESET_SECRET_EXPIRY = createField("password_reset_secret_expiry", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>member.name</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.identification</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> IDENTIFICATION = createField("identification", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.authentication</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> AUTHENTICATION = createField("authentication", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.organizational_unit</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> ORGANIZATIONAL_UNIT = createField("organizational_unit", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.internal_posts</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> INTERNAL_POSTS = createField("internal_posts", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.realname</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> REALNAME = createField("realname", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.birthday</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.sql.Date> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>member.address</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.email</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> EMAIL = createField("email", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.xmpp_address</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> XMPP_ADDRESS = createField("xmpp_address", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.website</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> WEBSITE = createField("website", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.phone</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> PHONE = createField("phone", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.mobile_phone</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> MOBILE_PHONE = createField("mobile_phone", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.profession</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> PROFESSION = createField("profession", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.external_memberships</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> EXTERNAL_MEMBERSHIPS = createField("external_memberships", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.external_posts</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> EXTERNAL_POSTS = createField("external_posts", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.formatting_engine</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> FORMATTING_ENGINE = createField("formatting_engine", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.statement</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.String> STATEMENT = createField("statement", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member.text_search_data</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.Object> TEXT_SEARCH_DATA = createField("text_search_data", org.jooq.impl.DefaultDataType.getDefaultDataType("tsvector"), this, "");

	/**
	 * Create a <code>member</code> table reference
	 */
	public Member() {
		this("member", null);
	}

	/**
	 * Create an aliased <code>member</code> table reference
	 */
	public Member(java.lang.String alias) {
		this(alias, org.liquidfeedback.generated.tables.Member.MEMBER);
	}

	private Member(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.MemberRecord> aliased) {
		this(alias, aliased, null);
	}

	private Member(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.MemberRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.liquidfeedback.generated.DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.liquidfeedback.generated.tables.records.MemberRecord, java.lang.Integer> getIdentity() {
		return org.liquidfeedback.generated.Keys.IDENTITY_MEMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.MemberRecord> getPrimaryKey() {
		return org.liquidfeedback.generated.Keys.MEMBER_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.MemberRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.MemberRecord>>asList(org.liquidfeedback.generated.Keys.MEMBER_PKEY, org.liquidfeedback.generated.Keys.MEMBER_INVITE_CODE_KEY, org.liquidfeedback.generated.Keys.MEMBER_LOGIN_KEY, org.liquidfeedback.generated.Keys.AUTHORITY_UID_UNIQUE_PER_AUTHORITY, org.liquidfeedback.generated.Keys.MEMBER_NOTIFY_EMAIL_SECRET_KEY, org.liquidfeedback.generated.Keys.MEMBER_PASSWORD_RESET_SECRET_KEY, org.liquidfeedback.generated.Keys.MEMBER_NAME_KEY, org.liquidfeedback.generated.Keys.MEMBER_IDENTIFICATION_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.tables.Member as(java.lang.String alias) {
		return new org.liquidfeedback.generated.tables.Member(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.liquidfeedback.generated.tables.Member rename(java.lang.String name) {
		return new org.liquidfeedback.generated.tables.Member(name, null);
	}
}
