/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberApplication extends org.jooq.impl.TableImpl<org.liquidfeedback.generated.tables.records.MemberApplicationRecord> {

	private static final long serialVersionUID = -1870942547;

	/**
	 * The singleton instance of <code>member_application</code>
	 */
	public static final org.liquidfeedback.generated.tables.MemberApplication MEMBER_APPLICATION = new org.liquidfeedback.generated.tables.MemberApplication();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.liquidfeedback.generated.tables.records.MemberApplicationRecord> getRecordType() {
		return org.liquidfeedback.generated.tables.records.MemberApplicationRecord.class;
	}

	/**
	 * The column <code>member_application.id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberApplicationRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>member_application.member_id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberApplicationRecord, java.lang.Integer> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>member_application.name</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberApplicationRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>member_application.comment</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberApplicationRecord, java.lang.String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>member_application.access_level</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberApplicationRecord, org.liquidfeedback.generated.enums.ApplicationAccessLevel> ACCESS_LEVEL = createField("access_level", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(org.liquidfeedback.generated.enums.ApplicationAccessLevel.class), this, "");

	/**
	 * The column <code>member_application.key</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberApplicationRecord, java.lang.String> KEY = createField("key", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>member_application.last_usage</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.MemberApplicationRecord, java.sql.Timestamp> LAST_USAGE = createField("last_usage", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>member_application</code> table reference
	 */
	public MemberApplication() {
		this("member_application", null);
	}

	/**
	 * Create an aliased <code>member_application</code> table reference
	 */
	public MemberApplication(java.lang.String alias) {
		this(alias, org.liquidfeedback.generated.tables.MemberApplication.MEMBER_APPLICATION);
	}

	private MemberApplication(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.MemberApplicationRecord> aliased) {
		this(alias, aliased, null);
	}

	private MemberApplication(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.MemberApplicationRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.liquidfeedback.generated.DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.liquidfeedback.generated.tables.records.MemberApplicationRecord, java.lang.Long> getIdentity() {
		return org.liquidfeedback.generated.Keys.IDENTITY_MEMBER_APPLICATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.MemberApplicationRecord> getPrimaryKey() {
		return org.liquidfeedback.generated.Keys.MEMBER_APPLICATION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.MemberApplicationRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.MemberApplicationRecord>>asList(org.liquidfeedback.generated.Keys.MEMBER_APPLICATION_PKEY, org.liquidfeedback.generated.Keys.MEMBER_APPLICATION_MEMBER_ID_NAME_KEY, org.liquidfeedback.generated.Keys.MEMBER_APPLICATION_KEY_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.liquidfeedback.generated.tables.records.MemberApplicationRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.liquidfeedback.generated.tables.records.MemberApplicationRecord, ?>>asList(org.liquidfeedback.generated.Keys.MEMBER_APPLICATION__MEMBER_APPLICATION_MEMBER_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.tables.MemberApplication as(java.lang.String alias) {
		return new org.liquidfeedback.generated.tables.MemberApplication(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.liquidfeedback.generated.tables.MemberApplication rename(java.lang.String name) {
		return new org.liquidfeedback.generated.tables.MemberApplication(name, null);
	}
}
