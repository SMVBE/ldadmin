/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Policy extends org.jooq.impl.TableImpl<org.liquidfeedback.generated.tables.records.PolicyRecord> {

	private static final long serialVersionUID = 656480517;

	/**
	 * The singleton instance of <code>policy</code>
	 */
	public static final org.liquidfeedback.generated.tables.Policy POLICY = new org.liquidfeedback.generated.tables.Policy();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.liquidfeedback.generated.tables.records.PolicyRecord> getRecordType() {
		return org.liquidfeedback.generated.tables.records.PolicyRecord.class;
	}

	/**
	 * The column <code>policy.id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.index</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> INDEX = createField("index", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>policy.active</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.name</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>policy.description</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.polling</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Boolean> POLLING = createField("polling", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.admission_time</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Object> ADMISSION_TIME = createField("admission_time", org.jooq.impl.DefaultDataType.getDefaultDataType("interval"), this, "");

	/**
	 * The column <code>policy.discussion_time</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Object> DISCUSSION_TIME = createField("discussion_time", org.jooq.impl.DefaultDataType.getDefaultDataType("interval"), this, "");

	/**
	 * The column <code>policy.verification_time</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Object> VERIFICATION_TIME = createField("verification_time", org.jooq.impl.DefaultDataType.getDefaultDataType("interval"), this, "");

	/**
	 * The column <code>policy.voting_time</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Object> VOTING_TIME = createField("voting_time", org.jooq.impl.DefaultDataType.getDefaultDataType("interval"), this, "");

	/**
	 * The column <code>policy.issue_quorum_num</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> ISSUE_QUORUM_NUM = createField("issue_quorum_num", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>policy.issue_quorum_den</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> ISSUE_QUORUM_DEN = createField("issue_quorum_den", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>policy.initiative_quorum_num</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> INITIATIVE_QUORUM_NUM = createField("initiative_quorum_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>policy.initiative_quorum_den</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> INITIATIVE_QUORUM_DEN = createField("initiative_quorum_den", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>policy.defeat_strength</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, org.liquidfeedback.generated.enums.DefeatStrength> DEFEAT_STRENGTH = createField("defeat_strength", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(org.liquidfeedback.generated.enums.DefeatStrength.class), this, "");

	/**
	 * The column <code>policy.tie_breaking</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, org.liquidfeedback.generated.enums.TieBreaking> TIE_BREAKING = createField("tie_breaking", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(org.liquidfeedback.generated.enums.TieBreaking.class), this, "");

	/**
	 * The column <code>policy.direct_majority_num</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> DIRECT_MAJORITY_NUM = createField("direct_majority_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.direct_majority_den</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> DIRECT_MAJORITY_DEN = createField("direct_majority_den", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.direct_majority_strict</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Boolean> DIRECT_MAJORITY_STRICT = createField("direct_majority_strict", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.direct_majority_positive</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> DIRECT_MAJORITY_POSITIVE = createField("direct_majority_positive", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.direct_majority_non_negative</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> DIRECT_MAJORITY_NON_NEGATIVE = createField("direct_majority_non_negative", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.indirect_majority_num</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> INDIRECT_MAJORITY_NUM = createField("indirect_majority_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.indirect_majority_den</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> INDIRECT_MAJORITY_DEN = createField("indirect_majority_den", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.indirect_majority_strict</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Boolean> INDIRECT_MAJORITY_STRICT = createField("indirect_majority_strict", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.indirect_majority_positive</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> INDIRECT_MAJORITY_POSITIVE = createField("indirect_majority_positive", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.indirect_majority_non_negative</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> INDIRECT_MAJORITY_NON_NEGATIVE = createField("indirect_majority_non_negative", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.no_reverse_beat_path</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Boolean> NO_REVERSE_BEAT_PATH = createField("no_reverse_beat_path", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>policy.no_multistage_majority</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Boolean> NO_MULTISTAGE_MAJORITY = createField("no_multistage_majority", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>policy</code> table reference
	 */
	public Policy() {
		this("policy", null);
	}

	/**
	 * Create an aliased <code>policy</code> table reference
	 */
	public Policy(java.lang.String alias) {
		this(alias, org.liquidfeedback.generated.tables.Policy.POLICY);
	}

	private Policy(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.PolicyRecord> aliased) {
		this(alias, aliased, null);
	}

	private Policy(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.PolicyRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.liquidfeedback.generated.DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.liquidfeedback.generated.tables.records.PolicyRecord, java.lang.Integer> getIdentity() {
		return org.liquidfeedback.generated.Keys.IDENTITY_POLICY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.PolicyRecord> getPrimaryKey() {
		return org.liquidfeedback.generated.Keys.POLICY_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.PolicyRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.PolicyRecord>>asList(org.liquidfeedback.generated.Keys.POLICY_PKEY, org.liquidfeedback.generated.Keys.POLICY_NAME_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.tables.Policy as(java.lang.String alias) {
		return new org.liquidfeedback.generated.tables.Policy(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.liquidfeedback.generated.tables.Policy rename(java.lang.String name) {
		return new org.liquidfeedback.generated.tables.Policy(name, null);
	}
}
