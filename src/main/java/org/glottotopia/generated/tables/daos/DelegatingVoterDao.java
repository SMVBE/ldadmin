/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DelegatingVoterDao extends org.jooq.impl.DAOImpl<org.liquidfeedback.generated.tables.records.DelegatingVoterRecord, org.liquidfeedback.generated.tables.pojos.DelegatingVoter, org.jooq.Record2<java.lang.Integer, java.lang.Integer>> {

	/**
	 * Create a new DelegatingVoterDao without any configuration
	 */
	public DelegatingVoterDao() {
		super(org.liquidfeedback.generated.tables.DelegatingVoter.DELEGATING_VOTER, org.liquidfeedback.generated.tables.pojos.DelegatingVoter.class);
	}

	/**
	 * Create a new DelegatingVoterDao with an attached configuration
	 */
	public DelegatingVoterDao(org.jooq.Configuration configuration) {
		super(org.liquidfeedback.generated.tables.DelegatingVoter.DELEGATING_VOTER, org.liquidfeedback.generated.tables.pojos.DelegatingVoter.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected org.jooq.Record2<java.lang.Integer, java.lang.Integer> getId(org.liquidfeedback.generated.tables.pojos.DelegatingVoter object) {
		return compositeKeyRecord(object.getIssueId(), object.getMemberId());
	}

	/**
	 * Fetch records that have <code>issue_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DelegatingVoter> fetchByIssueId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.DelegatingVoter.DELEGATING_VOTER.ISSUE_ID, values);
	}

	/**
	 * Fetch records that have <code>member_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DelegatingVoter> fetchByMemberId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.DelegatingVoter.DELEGATING_VOTER.MEMBER_ID, values);
	}

	/**
	 * Fetch records that have <code>weight IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DelegatingVoter> fetchByWeight(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.DelegatingVoter.DELEGATING_VOTER.WEIGHT, values);
	}

	/**
	 * Fetch records that have <code>scope IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DelegatingVoter> fetchByScope(org.liquidfeedback.generated.enums.DelegationScope... values) {
		return fetch(org.liquidfeedback.generated.tables.DelegatingVoter.DELEGATING_VOTER.SCOPE, values);
	}

	/**
	 * Fetch records that have <code>delegate_member_ids IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DelegatingVoter> fetchByDelegateMemberIds(java.lang.Integer[]... values) {
		return fetch(org.liquidfeedback.generated.tables.DelegatingVoter.DELEGATING_VOTER.DELEGATE_MEMBER_IDS, values);
	}
}
