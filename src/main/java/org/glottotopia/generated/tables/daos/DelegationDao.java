/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DelegationDao extends org.jooq.impl.DAOImpl<org.liquidfeedback.generated.tables.records.DelegationRecord, org.liquidfeedback.generated.tables.pojos.Delegation, java.lang.Long> {

	/**
	 * Create a new DelegationDao without any configuration
	 */
	public DelegationDao() {
		super(org.liquidfeedback.generated.tables.Delegation.DELEGATION, org.liquidfeedback.generated.tables.pojos.Delegation.class);
	}

	/**
	 * Create a new DelegationDao with an attached configuration
	 */
	public DelegationDao(org.jooq.Configuration configuration) {
		super(org.liquidfeedback.generated.tables.Delegation.DELEGATION, org.liquidfeedback.generated.tables.pojos.Delegation.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Long getId(org.liquidfeedback.generated.tables.pojos.Delegation object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Delegation> fetchById(java.lang.Long... values) {
		return fetch(org.liquidfeedback.generated.tables.Delegation.DELEGATION.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public org.liquidfeedback.generated.tables.pojos.Delegation fetchOneById(java.lang.Long value) {
		return fetchOne(org.liquidfeedback.generated.tables.Delegation.DELEGATION.ID, value);
	}

	/**
	 * Fetch records that have <code>truster_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Delegation> fetchByTrusterId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Delegation.DELEGATION.TRUSTER_ID, values);
	}

	/**
	 * Fetch records that have <code>trustee_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Delegation> fetchByTrusteeId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Delegation.DELEGATION.TRUSTEE_ID, values);
	}

	/**
	 * Fetch records that have <code>scope IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Delegation> fetchByScope(org.liquidfeedback.generated.enums.DelegationScope... values) {
		return fetch(org.liquidfeedback.generated.tables.Delegation.DELEGATION.SCOPE, values);
	}

	/**
	 * Fetch records that have <code>unit_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Delegation> fetchByUnitId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Delegation.DELEGATION.UNIT_ID, values);
	}

	/**
	 * Fetch records that have <code>area_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Delegation> fetchByAreaId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Delegation.DELEGATION.AREA_ID, values);
	}

	/**
	 * Fetch records that have <code>issue_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Delegation> fetchByIssueId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Delegation.DELEGATION.ISSUE_ID, values);
	}
}
