/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DirectVoterDao extends org.jooq.impl.DAOImpl<org.liquidfeedback.generated.tables.records.DirectVoterRecord, org.liquidfeedback.generated.tables.pojos.DirectVoter, org.jooq.Record2<java.lang.Integer, java.lang.Integer>> {

	/**
	 * Create a new DirectVoterDao without any configuration
	 */
	public DirectVoterDao() {
		super(org.liquidfeedback.generated.tables.DirectVoter.DIRECT_VOTER, org.liquidfeedback.generated.tables.pojos.DirectVoter.class);
	}

	/**
	 * Create a new DirectVoterDao with an attached configuration
	 */
	public DirectVoterDao(org.jooq.Configuration configuration) {
		super(org.liquidfeedback.generated.tables.DirectVoter.DIRECT_VOTER, org.liquidfeedback.generated.tables.pojos.DirectVoter.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected org.jooq.Record2<java.lang.Integer, java.lang.Integer> getId(org.liquidfeedback.generated.tables.pojos.DirectVoter object) {
		return compositeKeyRecord(object.getIssueId(), object.getMemberId());
	}

	/**
	 * Fetch records that have <code>issue_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DirectVoter> fetchByIssueId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.DirectVoter.DIRECT_VOTER.ISSUE_ID, values);
	}

	/**
	 * Fetch records that have <code>member_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DirectVoter> fetchByMemberId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.DirectVoter.DIRECT_VOTER.MEMBER_ID, values);
	}

	/**
	 * Fetch records that have <code>weight IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DirectVoter> fetchByWeight(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.DirectVoter.DIRECT_VOTER.WEIGHT, values);
	}

	/**
	 * Fetch records that have <code>comment_changed IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DirectVoter> fetchByCommentChanged(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.DirectVoter.DIRECT_VOTER.COMMENT_CHANGED, values);
	}

	/**
	 * Fetch records that have <code>formatting_engine IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DirectVoter> fetchByFormattingEngine(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.DirectVoter.DIRECT_VOTER.FORMATTING_ENGINE, values);
	}

	/**
	 * Fetch records that have <code>comment IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DirectVoter> fetchByComment(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.DirectVoter.DIRECT_VOTER.COMMENT, values);
	}

	/**
	 * Fetch records that have <code>text_search_data IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.DirectVoter> fetchByTextSearchData(java.lang.Object... values) {
		return fetch(org.liquidfeedback.generated.tables.DirectVoter.DIRECT_VOTER.TEXT_SEARCH_DATA, values);
	}
}
