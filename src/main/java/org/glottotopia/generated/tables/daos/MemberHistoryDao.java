/**
 * This class is generated by jOOQ
 */
package org.glottotopia.generated.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberHistoryDao extends org.jooq.impl.DAOImpl<org.glottotopia.generated.tables.records.MemberHistoryRecord, org.glottotopia.generated.tables.pojos.MemberHistory, java.lang.Long> {

	/**
	 * Create a new MemberHistoryDao without any configuration
	 */
	public MemberHistoryDao() {
		super(org.glottotopia.generated.tables.MemberHistory.MEMBER_HISTORY, org.glottotopia.generated.tables.pojos.MemberHistory.class);
	}

	/**
	 * Create a new MemberHistoryDao with an attached configuration
	 */
	public MemberHistoryDao(org.jooq.Configuration configuration) {
		super(org.glottotopia.generated.tables.MemberHistory.MEMBER_HISTORY, org.glottotopia.generated.tables.pojos.MemberHistory.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Long getId(org.glottotopia.generated.tables.pojos.MemberHistory object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<org.glottotopia.generated.tables.pojos.MemberHistory> fetchById(java.lang.Long... values) {
		return fetch(org.glottotopia.generated.tables.MemberHistory.MEMBER_HISTORY.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public org.glottotopia.generated.tables.pojos.MemberHistory fetchOneById(java.lang.Long value) {
		return fetchOne(org.glottotopia.generated.tables.MemberHistory.MEMBER_HISTORY.ID, value);
	}

	/**
	 * Fetch records that have <code>member_id IN (values)</code>
	 */
	public java.util.List<org.glottotopia.generated.tables.pojos.MemberHistory> fetchByMemberId(java.lang.Integer... values) {
		return fetch(org.glottotopia.generated.tables.MemberHistory.MEMBER_HISTORY.MEMBER_ID, values);
	}

	/**
	 * Fetch records that have <code>until IN (values)</code>
	 */
	public java.util.List<org.glottotopia.generated.tables.pojos.MemberHistory> fetchByUntil(java.sql.Timestamp... values) {
		return fetch(org.glottotopia.generated.tables.MemberHistory.MEMBER_HISTORY.UNTIL, values);
	}

	/**
	 * Fetch records that have <code>active IN (values)</code>
	 */
	public java.util.List<org.glottotopia.generated.tables.pojos.MemberHistory> fetchByActive(java.lang.Boolean... values) {
		return fetch(org.glottotopia.generated.tables.MemberHistory.MEMBER_HISTORY.ACTIVE, values);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public java.util.List<org.glottotopia.generated.tables.pojos.MemberHistory> fetchByName(java.lang.String... values) {
		return fetch(org.glottotopia.generated.tables.MemberHistory.MEMBER_HISTORY.NAME, values);
	}
}
