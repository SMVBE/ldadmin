/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PrivilegeDao extends org.jooq.impl.DAOImpl<org.liquidfeedback.generated.tables.records.PrivilegeRecord, org.liquidfeedback.generated.tables.pojos.Privilege, org.jooq.Record2<java.lang.Integer, java.lang.Integer>> {

	/**
	 * Create a new PrivilegeDao without any configuration
	 */
	public PrivilegeDao() {
		super(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE, org.liquidfeedback.generated.tables.pojos.Privilege.class);
	}

	/**
	 * Create a new PrivilegeDao with an attached configuration
	 */
	public PrivilegeDao(org.jooq.Configuration configuration) {
		super(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE, org.liquidfeedback.generated.tables.pojos.Privilege.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected org.jooq.Record2<java.lang.Integer, java.lang.Integer> getId(org.liquidfeedback.generated.tables.pojos.Privilege object) {
		return compositeKeyRecord(object.getUnitId(), object.getMemberId());
	}

	/**
	 * Fetch records that have <code>unit_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Privilege> fetchByUnitId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE.UNIT_ID, values);
	}

	/**
	 * Fetch records that have <code>member_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Privilege> fetchByMemberId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE.MEMBER_ID, values);
	}

	/**
	 * Fetch records that have <code>admin_manager IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Privilege> fetchByAdminManager(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE.ADMIN_MANAGER, values);
	}

	/**
	 * Fetch records that have <code>unit_manager IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Privilege> fetchByUnitManager(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE.UNIT_MANAGER, values);
	}

	/**
	 * Fetch records that have <code>area_manager IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Privilege> fetchByAreaManager(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE.AREA_MANAGER, values);
	}

	/**
	 * Fetch records that have <code>member_manager IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Privilege> fetchByMemberManager(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE.MEMBER_MANAGER, values);
	}

	/**
	 * Fetch records that have <code>initiative_right IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Privilege> fetchByInitiativeRight(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE.INITIATIVE_RIGHT, values);
	}

	/**
	 * Fetch records that have <code>voting_right IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Privilege> fetchByVotingRight(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE.VOTING_RIGHT, values);
	}

	/**
	 * Fetch records that have <code>polling_right IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Privilege> fetchByPollingRight(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Privilege.PRIVILEGE.POLLING_RIGHT, values);
	}
}
