/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionDao extends org.jooq.impl.DAOImpl<org.liquidfeedback.generated.tables.records.SessionRecord, org.liquidfeedback.generated.tables.pojos.Session, java.lang.String> {

	/**
	 * Create a new SessionDao without any configuration
	 */
	public SessionDao() {
		super(org.liquidfeedback.generated.tables.Session.SESSION, org.liquidfeedback.generated.tables.pojos.Session.class);
	}

	/**
	 * Create a new SessionDao with an attached configuration
	 */
	public SessionDao(org.jooq.Configuration configuration) {
		super(org.liquidfeedback.generated.tables.Session.SESSION, org.liquidfeedback.generated.tables.pojos.Session.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.String getId(org.liquidfeedback.generated.tables.pojos.Session object) {
		return object.getIdent();
	}

	/**
	 * Fetch records that have <code>ident IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Session> fetchByIdent(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Session.SESSION.IDENT, values);
	}

	/**
	 * Fetch a unique record that has <code>ident = value</code>
	 */
	public org.liquidfeedback.generated.tables.pojos.Session fetchOneByIdent(java.lang.String value) {
		return fetchOne(org.liquidfeedback.generated.tables.Session.SESSION.IDENT, value);
	}

	/**
	 * Fetch records that have <code>additional_secret IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Session> fetchByAdditionalSecret(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Session.SESSION.ADDITIONAL_SECRET, values);
	}

	/**
	 * Fetch records that have <code>expiry IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Session> fetchByExpiry(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Session.SESSION.EXPIRY, values);
	}

	/**
	 * Fetch records that have <code>member_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Session> fetchByMemberId(java.lang.Long... values) {
		return fetch(org.liquidfeedback.generated.tables.Session.SESSION.MEMBER_ID, values);
	}

	/**
	 * Fetch records that have <code>authority IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Session> fetchByAuthority(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Session.SESSION.AUTHORITY, values);
	}

	/**
	 * Fetch records that have <code>authority_uid IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Session> fetchByAuthorityUid(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Session.SESSION.AUTHORITY_UID, values);
	}

	/**
	 * Fetch records that have <code>authority_login IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Session> fetchByAuthorityLogin(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Session.SESSION.AUTHORITY_LOGIN, values);
	}

	/**
	 * Fetch records that have <code>needs_delegation_check IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Session> fetchByNeedsDelegationCheck(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Session.SESSION.NEEDS_DELEGATION_CHECK, values);
	}

	/**
	 * Fetch records that have <code>lang IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Session> fetchByLang(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Session.SESSION.LANG, values);
	}
}
