/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.interfaces;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IPolicy extends java.io.Serializable {

	/**
	 * Getter for <code>policy.id</code>.
	 */
	public java.lang.Integer getId();

	/**
	 * Getter for <code>policy.index</code>.
	 */
	public java.lang.Integer getIndex();

	/**
	 * Getter for <code>policy.active</code>.
	 */
	public java.lang.Boolean getActive();

	/**
	 * Getter for <code>policy.name</code>.
	 */
	public java.lang.String getName();

	/**
	 * Getter for <code>policy.description</code>.
	 */
	public java.lang.String getDescription();

	/**
	 * Getter for <code>policy.polling</code>.
	 */
	public java.lang.Boolean getPolling();

	/**
	 * Getter for <code>policy.admission_time</code>.
	 */
	public java.lang.Object getAdmissionTime();

	/**
	 * Getter for <code>policy.discussion_time</code>.
	 */
	public java.lang.Object getDiscussionTime();

	/**
	 * Getter for <code>policy.verification_time</code>.
	 */
	public java.lang.Object getVerificationTime();

	/**
	 * Getter for <code>policy.voting_time</code>.
	 */
	public java.lang.Object getVotingTime();

	/**
	 * Getter for <code>policy.issue_quorum_num</code>.
	 */
	public java.lang.Integer getIssueQuorumNum();

	/**
	 * Getter for <code>policy.issue_quorum_den</code>.
	 */
	public java.lang.Integer getIssueQuorumDen();

	/**
	 * Getter for <code>policy.initiative_quorum_num</code>.
	 */
	public java.lang.Integer getInitiativeQuorumNum();

	/**
	 * Getter for <code>policy.initiative_quorum_den</code>.
	 */
	public java.lang.Integer getInitiativeQuorumDen();

	/**
	 * Getter for <code>policy.defeat_strength</code>.
	 */
	public org.liquidfeedback.generated.enums.DefeatStrength getDefeatStrength();

	/**
	 * Getter for <code>policy.tie_breaking</code>.
	 */
	public org.liquidfeedback.generated.enums.TieBreaking getTieBreaking();

	/**
	 * Getter for <code>policy.direct_majority_num</code>.
	 */
	public java.lang.Integer getDirectMajorityNum();

	/**
	 * Getter for <code>policy.direct_majority_den</code>.
	 */
	public java.lang.Integer getDirectMajorityDen();

	/**
	 * Getter for <code>policy.direct_majority_strict</code>.
	 */
	public java.lang.Boolean getDirectMajorityStrict();

	/**
	 * Getter for <code>policy.direct_majority_positive</code>.
	 */
	public java.lang.Integer getDirectMajorityPositive();

	/**
	 * Getter for <code>policy.direct_majority_non_negative</code>.
	 */
	public java.lang.Integer getDirectMajorityNonNegative();

	/**
	 * Getter for <code>policy.indirect_majority_num</code>.
	 */
	public java.lang.Integer getIndirectMajorityNum();

	/**
	 * Getter for <code>policy.indirect_majority_den</code>.
	 */
	public java.lang.Integer getIndirectMajorityDen();

	/**
	 * Getter for <code>policy.indirect_majority_strict</code>.
	 */
	public java.lang.Boolean getIndirectMajorityStrict();

	/**
	 * Getter for <code>policy.indirect_majority_positive</code>.
	 */
	public java.lang.Integer getIndirectMajorityPositive();

	/**
	 * Getter for <code>policy.indirect_majority_non_negative</code>.
	 */
	public java.lang.Integer getIndirectMajorityNonNegative();

	/**
	 * Getter for <code>policy.no_reverse_beat_path</code>.
	 */
	public java.lang.Boolean getNoReverseBeatPath();

	/**
	 * Getter for <code>policy.no_multistage_majority</code>.
	 */
	public java.lang.Boolean getNoMultistageMajority();
}
