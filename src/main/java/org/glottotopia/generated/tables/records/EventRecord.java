/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventRecord extends org.jooq.impl.UpdatableRecordImpl<org.liquidfeedback.generated.tables.records.EventRecord> implements org.jooq.Record9<java.lang.Long, java.sql.Timestamp, org.liquidfeedback.generated.enums.EventType, java.lang.Integer, java.lang.Integer, org.liquidfeedback.generated.enums.IssueState, java.lang.Integer, java.lang.Long, java.lang.Long>, org.liquidfeedback.generated.tables.interfaces.IEvent {

	private static final long serialVersionUID = -1069146847;

	/**
	 * Setter for <code>event.id</code>.
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>event.id</code>.
	 */
	@Override
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>event.occurrence</code>.
	 */
	public void setOccurrence(java.sql.Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>event.occurrence</code>.
	 */
	@Override
	public java.sql.Timestamp getOccurrence() {
		return (java.sql.Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>event.event</code>.
	 */
	public void setEvent(org.liquidfeedback.generated.enums.EventType value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>event.event</code>.
	 */
	@Override
	public org.liquidfeedback.generated.enums.EventType getEvent() {
		return (org.liquidfeedback.generated.enums.EventType) getValue(2);
	}

	/**
	 * Setter for <code>event.member_id</code>.
	 */
	public void setMemberId(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>event.member_id</code>.
	 */
	@Override
	public java.lang.Integer getMemberId() {
		return (java.lang.Integer) getValue(3);
	}

	/**
	 * Setter for <code>event.issue_id</code>.
	 */
	public void setIssueId(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>event.issue_id</code>.
	 */
	@Override
	public java.lang.Integer getIssueId() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>event.state</code>.
	 */
	public void setState(org.liquidfeedback.generated.enums.IssueState value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>event.state</code>.
	 */
	@Override
	public org.liquidfeedback.generated.enums.IssueState getState() {
		return (org.liquidfeedback.generated.enums.IssueState) getValue(5);
	}

	/**
	 * Setter for <code>event.initiative_id</code>.
	 */
	public void setInitiativeId(java.lang.Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>event.initiative_id</code>.
	 */
	@Override
	public java.lang.Integer getInitiativeId() {
		return (java.lang.Integer) getValue(6);
	}

	/**
	 * Setter for <code>event.draft_id</code>.
	 */
	public void setDraftId(java.lang.Long value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>event.draft_id</code>.
	 */
	@Override
	public java.lang.Long getDraftId() {
		return (java.lang.Long) getValue(7);
	}

	/**
	 * Setter for <code>event.suggestion_id</code>.
	 */
	public void setSuggestionId(java.lang.Long value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>event.suggestion_id</code>.
	 */
	@Override
	public java.lang.Long getSuggestionId() {
		return (java.lang.Long) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Long, java.sql.Timestamp, org.liquidfeedback.generated.enums.EventType, java.lang.Integer, java.lang.Integer, org.liquidfeedback.generated.enums.IssueState, java.lang.Integer, java.lang.Long, java.lang.Long> fieldsRow() {
		return (org.jooq.Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Long, java.sql.Timestamp, org.liquidfeedback.generated.enums.EventType, java.lang.Integer, java.lang.Integer, org.liquidfeedback.generated.enums.IssueState, java.lang.Integer, java.lang.Long, java.lang.Long> valuesRow() {
		return (org.jooq.Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.liquidfeedback.generated.tables.Event.EVENT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field2() {
		return org.liquidfeedback.generated.tables.Event.EVENT.OCCURRENCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.liquidfeedback.generated.enums.EventType> field3() {
		return org.liquidfeedback.generated.tables.Event.EVENT.EVENT_;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return org.liquidfeedback.generated.tables.Event.EVENT.MEMBER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return org.liquidfeedback.generated.tables.Event.EVENT.ISSUE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.liquidfeedback.generated.enums.IssueState> field6() {
		return org.liquidfeedback.generated.tables.Event.EVENT.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field7() {
		return org.liquidfeedback.generated.tables.Event.EVENT.INITIATIVE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field8() {
		return org.liquidfeedback.generated.tables.Event.EVENT.DRAFT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field9() {
		return org.liquidfeedback.generated.tables.Event.EVENT.SUGGESTION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value2() {
		return getOccurrence();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.enums.EventType value3() {
		return getEvent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getMemberId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getIssueId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.enums.IssueState value6() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value7() {
		return getInitiativeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value8() {
		return getDraftId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value9() {
		return getSuggestionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value1(java.lang.Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value2(java.sql.Timestamp value) {
		setOccurrence(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value3(org.liquidfeedback.generated.enums.EventType value) {
		setEvent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value4(java.lang.Integer value) {
		setMemberId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value5(java.lang.Integer value) {
		setIssueId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value6(org.liquidfeedback.generated.enums.IssueState value) {
		setState(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value7(java.lang.Integer value) {
		setInitiativeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value8(java.lang.Long value) {
		setDraftId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value9(java.lang.Long value) {
		setSuggestionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord values(java.lang.Long value1, java.sql.Timestamp value2, org.liquidfeedback.generated.enums.EventType value3, java.lang.Integer value4, java.lang.Integer value5, org.liquidfeedback.generated.enums.IssueState value6, java.lang.Integer value7, java.lang.Long value8, java.lang.Long value9) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EventRecord
	 */
	public EventRecord() {
		super(org.liquidfeedback.generated.tables.Event.EVENT);
	}

	/**
	 * Create a detached, initialised EventRecord
	 */
	public EventRecord(java.lang.Long id, java.sql.Timestamp occurrence, org.liquidfeedback.generated.enums.EventType event, java.lang.Integer memberId, java.lang.Integer issueId, org.liquidfeedback.generated.enums.IssueState state, java.lang.Integer initiativeId, java.lang.Long draftId, java.lang.Long suggestionId) {
		super(org.liquidfeedback.generated.tables.Event.EVENT);

		setValue(0, id);
		setValue(1, occurrence);
		setValue(2, event);
		setValue(3, memberId);
		setValue(4, issueId);
		setValue(5, state);
		setValue(6, initiativeId);
		setValue(7, draftId);
		setValue(8, suggestionId);
	}
}
