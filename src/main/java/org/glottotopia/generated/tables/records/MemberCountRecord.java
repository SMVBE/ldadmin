/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberCountRecord extends org.jooq.impl.TableRecordImpl<org.liquidfeedback.generated.tables.records.MemberCountRecord> implements org.jooq.Record2<java.sql.Timestamp, java.lang.Integer>, org.liquidfeedback.generated.tables.interfaces.IMemberCount {

	private static final long serialVersionUID = -149349973;

	/**
	 * Setter for <code>member_count.calculated</code>.
	 */
	public void setCalculated(java.sql.Timestamp value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>member_count.calculated</code>.
	 */
	@Override
	public java.sql.Timestamp getCalculated() {
		return (java.sql.Timestamp) getValue(0);
	}

	/**
	 * Setter for <code>member_count.total_count</code>.
	 */
	public void setTotalCount(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>member_count.total_count</code>.
	 */
	@Override
	public java.lang.Integer getTotalCount() {
		return (java.lang.Integer) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.sql.Timestamp, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.sql.Timestamp, java.lang.Integer> valuesRow() {
		return (org.jooq.Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field1() {
		return org.liquidfeedback.generated.tables.MemberCount.MEMBER_COUNT.CALCULATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return org.liquidfeedback.generated.tables.MemberCount.MEMBER_COUNT.TOTAL_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value1() {
		return getCalculated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getTotalCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberCountRecord value1(java.sql.Timestamp value) {
		setCalculated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberCountRecord value2(java.lang.Integer value) {
		setTotalCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberCountRecord values(java.sql.Timestamp value1, java.lang.Integer value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MemberCountRecord
	 */
	public MemberCountRecord() {
		super(org.liquidfeedback.generated.tables.MemberCount.MEMBER_COUNT);
	}

	/**
	 * Create a detached, initialised MemberCountRecord
	 */
	public MemberCountRecord(java.sql.Timestamp calculated, java.lang.Integer totalCount) {
		super(org.liquidfeedback.generated.tables.MemberCount.MEMBER_COUNT);

		setValue(0, calculated);
		setValue(1, totalCount);
	}
}
