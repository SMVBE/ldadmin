/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberImageRecord extends org.jooq.impl.UpdatableRecordImpl<org.liquidfeedback.generated.tables.records.MemberImageRecord> implements org.jooq.Record5<java.lang.Integer, org.liquidfeedback.generated.enums.MemberImageType, java.lang.Boolean, java.lang.String, byte[]>, org.liquidfeedback.generated.tables.interfaces.IMemberImage {

	private static final long serialVersionUID = -1124551386;

	/**
	 * Setter for <code>member_image.member_id</code>.
	 */
	public void setMemberId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>member_image.member_id</code>.
	 */
	@Override
	public java.lang.Integer getMemberId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>member_image.image_type</code>.
	 */
	public void setImageType(org.liquidfeedback.generated.enums.MemberImageType value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>member_image.image_type</code>.
	 */
	@Override
	public org.liquidfeedback.generated.enums.MemberImageType getImageType() {
		return (org.liquidfeedback.generated.enums.MemberImageType) getValue(1);
	}

	/**
	 * Setter for <code>member_image.scaled</code>.
	 */
	public void setScaled(java.lang.Boolean value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>member_image.scaled</code>.
	 */
	@Override
	public java.lang.Boolean getScaled() {
		return (java.lang.Boolean) getValue(2);
	}

	/**
	 * Setter for <code>member_image.content_type</code>.
	 */
	public void setContentType(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>member_image.content_type</code>.
	 */
	@Override
	public java.lang.String getContentType() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>member_image.data</code>.
	 */
	public void setData(byte[] value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>member_image.data</code>.
	 */
	@Override
	public byte[] getData() {
		return (byte[]) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record3<java.lang.Integer, org.liquidfeedback.generated.enums.MemberImageType, java.lang.Boolean> key() {
		return (org.jooq.Record3) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<java.lang.Integer, org.liquidfeedback.generated.enums.MemberImageType, java.lang.Boolean, java.lang.String, byte[]> fieldsRow() {
		return (org.jooq.Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<java.lang.Integer, org.liquidfeedback.generated.enums.MemberImageType, java.lang.Boolean, java.lang.String, byte[]> valuesRow() {
		return (org.jooq.Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.liquidfeedback.generated.tables.MemberImage.MEMBER_IMAGE.MEMBER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.liquidfeedback.generated.enums.MemberImageType> field2() {
		return org.liquidfeedback.generated.tables.MemberImage.MEMBER_IMAGE.IMAGE_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field3() {
		return org.liquidfeedback.generated.tables.MemberImage.MEMBER_IMAGE.SCALED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return org.liquidfeedback.generated.tables.MemberImage.MEMBER_IMAGE.CONTENT_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field5() {
		return org.liquidfeedback.generated.tables.MemberImage.MEMBER_IMAGE.DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getMemberId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.enums.MemberImageType value2() {
		return getImageType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value3() {
		return getScaled();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getContentType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value5() {
		return getData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberImageRecord value1(java.lang.Integer value) {
		setMemberId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberImageRecord value2(org.liquidfeedback.generated.enums.MemberImageType value) {
		setImageType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberImageRecord value3(java.lang.Boolean value) {
		setScaled(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberImageRecord value4(java.lang.String value) {
		setContentType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberImageRecord value5(byte[] value) {
		setData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberImageRecord values(java.lang.Integer value1, org.liquidfeedback.generated.enums.MemberImageType value2, java.lang.Boolean value3, java.lang.String value4, byte[] value5) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MemberImageRecord
	 */
	public MemberImageRecord() {
		super(org.liquidfeedback.generated.tables.MemberImage.MEMBER_IMAGE);
	}

	/**
	 * Create a detached, initialised MemberImageRecord
	 */
	public MemberImageRecord(java.lang.Integer memberId, org.liquidfeedback.generated.enums.MemberImageType imageType, java.lang.Boolean scaled, java.lang.String contentType, byte[] data) {
		super(org.liquidfeedback.generated.tables.MemberImage.MEMBER_IMAGE);

		setValue(0, memberId);
		setValue(1, imageType);
		setValue(2, scaled);
		setValue(3, contentType);
		setValue(4, data);
	}
}
