/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SupporterRecord extends org.jooq.impl.UpdatableRecordImpl<org.liquidfeedback.generated.tables.records.SupporterRecord> implements org.jooq.Record4<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Long>, org.liquidfeedback.generated.tables.interfaces.ISupporter {

	private static final long serialVersionUID = -1832953433;

	/**
	 * Setter for <code>supporter.issue_id</code>.
	 */
	public void setIssueId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>supporter.issue_id</code>.
	 */
	@Override
	public java.lang.Integer getIssueId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>supporter.initiative_id</code>.
	 */
	public void setInitiativeId(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>supporter.initiative_id</code>.
	 */
	@Override
	public java.lang.Integer getInitiativeId() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>supporter.member_id</code>.
	 */
	public void setMemberId(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>supporter.member_id</code>.
	 */
	@Override
	public java.lang.Integer getMemberId() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>supporter.draft_id</code>.
	 */
	public void setDraftId(java.lang.Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>supporter.draft_id</code>.
	 */
	@Override
	public java.lang.Long getDraftId() {
		return (java.lang.Long) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record2<java.lang.Integer, java.lang.Integer> key() {
		return (org.jooq.Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Long> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Long> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.liquidfeedback.generated.tables.Supporter.SUPPORTER.ISSUE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return org.liquidfeedback.generated.tables.Supporter.SUPPORTER.INITIATIVE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return org.liquidfeedback.generated.tables.Supporter.SUPPORTER.MEMBER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field4() {
		return org.liquidfeedback.generated.tables.Supporter.SUPPORTER.DRAFT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getIssueId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getInitiativeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getMemberId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value4() {
		return getDraftId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SupporterRecord value1(java.lang.Integer value) {
		setIssueId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SupporterRecord value2(java.lang.Integer value) {
		setInitiativeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SupporterRecord value3(java.lang.Integer value) {
		setMemberId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SupporterRecord value4(java.lang.Long value) {
		setDraftId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SupporterRecord values(java.lang.Integer value1, java.lang.Integer value2, java.lang.Integer value3, java.lang.Long value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SupporterRecord
	 */
	public SupporterRecord() {
		super(org.liquidfeedback.generated.tables.Supporter.SUPPORTER);
	}

	/**
	 * Create a detached, initialised SupporterRecord
	 */
	public SupporterRecord(java.lang.Integer issueId, java.lang.Integer initiativeId, java.lang.Integer memberId, java.lang.Long draftId) {
		super(org.liquidfeedback.generated.tables.Supporter.SUPPORTER);

		setValue(0, issueId);
		setValue(1, initiativeId);
		setValue(2, memberId);
		setValue(3, draftId);
	}
}
