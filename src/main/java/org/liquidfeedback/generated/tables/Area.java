/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Area extends org.jooq.impl.TableImpl<org.liquidfeedback.generated.tables.records.AreaRecord> {

	private static final long serialVersionUID = -1466226707;

	/**
	 * The singleton instance of <code>area</code>
	 */
	public static final org.liquidfeedback.generated.tables.Area AREA = new org.liquidfeedback.generated.tables.Area();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.liquidfeedback.generated.tables.records.AreaRecord> getRecordType() {
		return org.liquidfeedback.generated.tables.records.AreaRecord.class;
	}

	/**
	 * The column <code>area.id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.AreaRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>area.unit_id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.AreaRecord, java.lang.Integer> UNIT_ID = createField("unit_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>area.active</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.AreaRecord, java.lang.Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>area.name</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.AreaRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>area.description</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.AreaRecord, java.lang.String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>area.direct_member_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.AreaRecord, java.lang.Integer> DIRECT_MEMBER_COUNT = createField("direct_member_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>area.member_weight</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.AreaRecord, java.lang.Integer> MEMBER_WEIGHT = createField("member_weight", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>area.text_search_data</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.AreaRecord, java.lang.Object> TEXT_SEARCH_DATA = createField("text_search_data", org.jooq.impl.DefaultDataType.getDefaultDataType("tsvector"), this, "");

	/**
	 * Create a <code>area</code> table reference
	 */
	public Area() {
		this("area", null);
	}

	/**
	 * Create an aliased <code>area</code> table reference
	 */
	public Area(java.lang.String alias) {
		this(alias, org.liquidfeedback.generated.tables.Area.AREA);
	}

	private Area(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.AreaRecord> aliased) {
		this(alias, aliased, null);
	}

	private Area(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.AreaRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.liquidfeedback.generated.DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.liquidfeedback.generated.tables.records.AreaRecord, java.lang.Integer> getIdentity() {
		return org.liquidfeedback.generated.Keys.IDENTITY_AREA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.AreaRecord> getPrimaryKey() {
		return org.liquidfeedback.generated.Keys.AREA_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.AreaRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.AreaRecord>>asList(org.liquidfeedback.generated.Keys.AREA_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.liquidfeedback.generated.tables.records.AreaRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.liquidfeedback.generated.tables.records.AreaRecord, ?>>asList(org.liquidfeedback.generated.Keys.AREA__AREA_UNIT_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.tables.Area as(java.lang.String alias) {
		return new org.liquidfeedback.generated.tables.Area(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.liquidfeedback.generated.tables.Area rename(java.lang.String name) {
		return new org.liquidfeedback.generated.tables.Area(name, null);
	}
}
