/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Initiative extends org.jooq.impl.TableImpl<org.liquidfeedback.generated.tables.records.InitiativeRecord> {

	private static final long serialVersionUID = -1236191187;

	/**
	 * The singleton instance of <code>initiative</code>
	 */
	public static final org.liquidfeedback.generated.tables.Initiative INITIATIVE = new org.liquidfeedback.generated.tables.Initiative();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.liquidfeedback.generated.tables.records.InitiativeRecord> getRecordType() {
		return org.liquidfeedback.generated.tables.records.InitiativeRecord.class;
	}

	/**
	 * The column <code>initiative.issue_id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> ISSUE_ID = createField("issue_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>initiative.id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>initiative.name</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>initiative.polling</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> POLLING = createField("polling", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>initiative.discussion_url</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.String> DISCUSSION_URL = createField("discussion_url", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>initiative.created</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>initiative.revoked</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.sql.Timestamp> REVOKED = createField("revoked", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>initiative.revoked_by_member_id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> REVOKED_BY_MEMBER_ID = createField("revoked_by_member_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.suggested_initiative_id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> SUGGESTED_INITIATIVE_ID = createField("suggested_initiative_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.admitted</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> ADMITTED = createField("admitted", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>initiative.supporter_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> SUPPORTER_COUNT = createField("supporter_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.informed_supporter_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> INFORMED_SUPPORTER_COUNT = createField("informed_supporter_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.satisfied_supporter_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> SATISFIED_SUPPORTER_COUNT = createField("satisfied_supporter_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.satisfied_informed_supporter_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> SATISFIED_INFORMED_SUPPORTER_COUNT = createField("satisfied_informed_supporter_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.harmonic_weight</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.math.BigDecimal> HARMONIC_WEIGHT = createField("harmonic_weight", org.jooq.impl.SQLDataType.NUMERIC.precision(12, 3), this, "");

	/**
	 * The column <code>initiative.final_suggestion_order_calculated</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> FINAL_SUGGESTION_ORDER_CALCULATED = createField("final_suggestion_order_calculated", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>initiative.first_preference_votes</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> FIRST_PREFERENCE_VOTES = createField("first_preference_votes", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.positive_votes</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> POSITIVE_VOTES = createField("positive_votes", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.negative_votes</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> NEGATIVE_VOTES = createField("negative_votes", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.direct_majority</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> DIRECT_MAJORITY = createField("direct_majority", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>initiative.indirect_majority</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> INDIRECT_MAJORITY = createField("indirect_majority", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>initiative.schulze_rank</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> SCHULZE_RANK = createField("schulze_rank", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.better_than_status_quo</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> BETTER_THAN_STATUS_QUO = createField("better_than_status_quo", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>initiative.worse_than_status_quo</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> WORSE_THAN_STATUS_QUO = createField("worse_than_status_quo", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>initiative.reverse_beat_path</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> REVERSE_BEAT_PATH = createField("reverse_beat_path", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>initiative.multistage_majority</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> MULTISTAGE_MAJORITY = createField("multistage_majority", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>initiative.eligible</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> ELIGIBLE = createField("eligible", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>initiative.winner</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Boolean> WINNER = createField("winner", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>initiative.rank</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> RANK = createField("rank", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>initiative.text_search_data</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Object> TEXT_SEARCH_DATA = createField("text_search_data", org.jooq.impl.DefaultDataType.getDefaultDataType("tsvector"), this, "");

	/**
	 * Create a <code>initiative</code> table reference
	 */
	public Initiative() {
		this("initiative", null);
	}

	/**
	 * Create an aliased <code>initiative</code> table reference
	 */
	public Initiative(java.lang.String alias) {
		this(alias, org.liquidfeedback.generated.tables.Initiative.INITIATIVE);
	}

	private Initiative(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.InitiativeRecord> aliased) {
		this(alias, aliased, null);
	}

	private Initiative(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.InitiativeRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.liquidfeedback.generated.DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.liquidfeedback.generated.tables.records.InitiativeRecord, java.lang.Integer> getIdentity() {
		return org.liquidfeedback.generated.Keys.IDENTITY_INITIATIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.InitiativeRecord> getPrimaryKey() {
		return org.liquidfeedback.generated.Keys.INITIATIVE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.InitiativeRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.InitiativeRecord>>asList(org.liquidfeedback.generated.Keys.INITIATIVE_ISSUE_ID_ID_KEY, org.liquidfeedback.generated.Keys.UNIQUE_RANK_PER_ISSUE, org.liquidfeedback.generated.Keys.INITIATIVE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.liquidfeedback.generated.tables.records.InitiativeRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.liquidfeedback.generated.tables.records.InitiativeRecord, ?>>asList(org.liquidfeedback.generated.Keys.INITIATIVE__INITIATIVE_ISSUE_ID_FKEY, org.liquidfeedback.generated.Keys.INITIATIVE__INITIATIVE_REVOKED_BY_MEMBER_ID_FKEY, org.liquidfeedback.generated.Keys.INITIATIVE__INITIATIVE_SUGGESTED_INITIATIVE_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.tables.Initiative as(java.lang.String alias) {
		return new org.liquidfeedback.generated.tables.Initiative(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.liquidfeedback.generated.tables.Initiative rename(java.lang.String name) {
		return new org.liquidfeedback.generated.tables.Initiative(name, null);
	}
}
