/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RenderedDraft extends org.jooq.impl.TableImpl<org.liquidfeedback.generated.tables.records.RenderedDraftRecord> {

	private static final long serialVersionUID = 587420096;

	/**
	 * The singleton instance of <code>rendered_draft</code>
	 */
	public static final org.liquidfeedback.generated.tables.RenderedDraft RENDERED_DRAFT = new org.liquidfeedback.generated.tables.RenderedDraft();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.liquidfeedback.generated.tables.records.RenderedDraftRecord> getRecordType() {
		return org.liquidfeedback.generated.tables.records.RenderedDraftRecord.class;
	}

	/**
	 * The column <code>rendered_draft.draft_id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.RenderedDraftRecord, java.lang.Long> DRAFT_ID = createField("draft_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>rendered_draft.format</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.RenderedDraftRecord, java.lang.String> FORMAT = createField("format", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>rendered_draft.content</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.RenderedDraftRecord, java.lang.String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>rendered_draft</code> table reference
	 */
	public RenderedDraft() {
		this("rendered_draft", null);
	}

	/**
	 * Create an aliased <code>rendered_draft</code> table reference
	 */
	public RenderedDraft(java.lang.String alias) {
		this(alias, org.liquidfeedback.generated.tables.RenderedDraft.RENDERED_DRAFT);
	}

	private RenderedDraft(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.RenderedDraftRecord> aliased) {
		this(alias, aliased, null);
	}

	private RenderedDraft(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.RenderedDraftRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.liquidfeedback.generated.DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.RenderedDraftRecord> getPrimaryKey() {
		return org.liquidfeedback.generated.Keys.RENDERED_DRAFT_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.RenderedDraftRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.RenderedDraftRecord>>asList(org.liquidfeedback.generated.Keys.RENDERED_DRAFT_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.liquidfeedback.generated.tables.records.RenderedDraftRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.liquidfeedback.generated.tables.records.RenderedDraftRecord, ?>>asList(org.liquidfeedback.generated.Keys.RENDERED_DRAFT__RENDERED_DRAFT_DRAFT_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.tables.RenderedDraft as(java.lang.String alias) {
		return new org.liquidfeedback.generated.tables.RenderedDraft(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.liquidfeedback.generated.tables.RenderedDraft rename(java.lang.String name) {
		return new org.liquidfeedback.generated.tables.RenderedDraft(name, null);
	}
}
