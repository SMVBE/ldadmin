/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Suggestion extends org.jooq.impl.TableImpl<org.liquidfeedback.generated.tables.records.SuggestionRecord> {

	private static final long serialVersionUID = 257924289;

	/**
	 * The singleton instance of <code>suggestion</code>
	 */
	public static final org.liquidfeedback.generated.tables.Suggestion SUGGESTION = new org.liquidfeedback.generated.tables.Suggestion();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.liquidfeedback.generated.tables.records.SuggestionRecord> getRecordType() {
		return org.liquidfeedback.generated.tables.records.SuggestionRecord.class;
	}

	/**
	 * The column <code>suggestion.initiative_id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> INITIATIVE_ID = createField("initiative_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>suggestion.id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>suggestion.draft_id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Long> DRAFT_ID = createField("draft_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>suggestion.created</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>suggestion.author_id</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> AUTHOR_ID = createField("author_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>suggestion.name</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>suggestion.formatting_engine</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.String> FORMATTING_ENGINE = createField("formatting_engine", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>suggestion.content</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>suggestion.text_search_data</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Object> TEXT_SEARCH_DATA = createField("text_search_data", org.jooq.impl.DefaultDataType.getDefaultDataType("tsvector"), this, "");

	/**
	 * The column <code>suggestion.minus2_unfulfilled_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> MINUS2_UNFULFILLED_COUNT = createField("minus2_unfulfilled_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>suggestion.minus2_fulfilled_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> MINUS2_FULFILLED_COUNT = createField("minus2_fulfilled_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>suggestion.minus1_unfulfilled_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> MINUS1_UNFULFILLED_COUNT = createField("minus1_unfulfilled_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>suggestion.minus1_fulfilled_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> MINUS1_FULFILLED_COUNT = createField("minus1_fulfilled_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>suggestion.plus1_unfulfilled_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> PLUS1_UNFULFILLED_COUNT = createField("plus1_unfulfilled_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>suggestion.plus1_fulfilled_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> PLUS1_FULFILLED_COUNT = createField("plus1_fulfilled_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>suggestion.plus2_unfulfilled_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> PLUS2_UNFULFILLED_COUNT = createField("plus2_unfulfilled_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>suggestion.plus2_fulfilled_count</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> PLUS2_FULFILLED_COUNT = createField("plus2_fulfilled_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>suggestion.proportional_order</code>.
	 */
	public final org.jooq.TableField<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Integer> PROPORTIONAL_ORDER = createField("proportional_order", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>suggestion</code> table reference
	 */
	public Suggestion() {
		this("suggestion", null);
	}

	/**
	 * Create an aliased <code>suggestion</code> table reference
	 */
	public Suggestion(java.lang.String alias) {
		this(alias, org.liquidfeedback.generated.tables.Suggestion.SUGGESTION);
	}

	private Suggestion(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.SuggestionRecord> aliased) {
		this(alias, aliased, null);
	}

	private Suggestion(java.lang.String alias, org.jooq.Table<org.liquidfeedback.generated.tables.records.SuggestionRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.liquidfeedback.generated.DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.liquidfeedback.generated.tables.records.SuggestionRecord, java.lang.Long> getIdentity() {
		return org.liquidfeedback.generated.Keys.IDENTITY_SUGGESTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.SuggestionRecord> getPrimaryKey() {
		return org.liquidfeedback.generated.Keys.SUGGESTION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.SuggestionRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.liquidfeedback.generated.tables.records.SuggestionRecord>>asList(org.liquidfeedback.generated.Keys.SUGGESTION_INITIATIVE_ID_ID_KEY, org.liquidfeedback.generated.Keys.SUGGESTION_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.liquidfeedback.generated.tables.records.SuggestionRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.liquidfeedback.generated.tables.records.SuggestionRecord, ?>>asList(org.liquidfeedback.generated.Keys.SUGGESTION__SUGGESTION_INITIATIVE_ID_FKEY, org.liquidfeedback.generated.Keys.SUGGESTION__SUGGESTION_INITIATIVE_ID_FKEY1, org.liquidfeedback.generated.Keys.SUGGESTION__SUGGESTION_AUTHOR_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.tables.Suggestion as(java.lang.String alias) {
		return new org.liquidfeedback.generated.tables.Suggestion(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.liquidfeedback.generated.tables.Suggestion rename(java.lang.String name) {
		return new org.liquidfeedback.generated.tables.Suggestion(name, null);
	}
}
