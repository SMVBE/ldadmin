/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InitiativeDao extends org.jooq.impl.DAOImpl<org.liquidfeedback.generated.tables.records.InitiativeRecord, org.liquidfeedback.generated.tables.pojos.Initiative, java.lang.Integer> {

	/**
	 * Create a new InitiativeDao without any configuration
	 */
	public InitiativeDao() {
		super(org.liquidfeedback.generated.tables.Initiative.INITIATIVE, org.liquidfeedback.generated.tables.pojos.Initiative.class);
	}

	/**
	 * Create a new InitiativeDao with an attached configuration
	 */
	public InitiativeDao(org.jooq.Configuration configuration) {
		super(org.liquidfeedback.generated.tables.Initiative.INITIATIVE, org.liquidfeedback.generated.tables.pojos.Initiative.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(org.liquidfeedback.generated.tables.pojos.Initiative object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>issue_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByIssueId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.ISSUE_ID, values);
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchById(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public org.liquidfeedback.generated.tables.pojos.Initiative fetchOneById(java.lang.Integer value) {
		return fetchOne(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.ID, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByName(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.NAME, values);
	}

	/**
	 * Fetch records that have <code>polling IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByPolling(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.POLLING, values);
	}

	/**
	 * Fetch records that have <code>discussion_url IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByDiscussionUrl(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.DISCUSSION_URL, values);
	}

	/**
	 * Fetch records that have <code>created IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByCreated(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.CREATED, values);
	}

	/**
	 * Fetch records that have <code>revoked IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByRevoked(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.REVOKED, values);
	}

	/**
	 * Fetch records that have <code>revoked_by_member_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByRevokedByMemberId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.REVOKED_BY_MEMBER_ID, values);
	}

	/**
	 * Fetch records that have <code>suggested_initiative_id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchBySuggestedInitiativeId(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.SUGGESTED_INITIATIVE_ID, values);
	}

	/**
	 * Fetch records that have <code>admitted IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByAdmitted(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.ADMITTED, values);
	}

	/**
	 * Fetch records that have <code>supporter_count IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchBySupporterCount(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.SUPPORTER_COUNT, values);
	}

	/**
	 * Fetch records that have <code>informed_supporter_count IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByInformedSupporterCount(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.INFORMED_SUPPORTER_COUNT, values);
	}

	/**
	 * Fetch records that have <code>satisfied_supporter_count IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchBySatisfiedSupporterCount(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.SATISFIED_SUPPORTER_COUNT, values);
	}

	/**
	 * Fetch records that have <code>satisfied_informed_supporter_count IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchBySatisfiedInformedSupporterCount(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.SATISFIED_INFORMED_SUPPORTER_COUNT, values);
	}

	/**
	 * Fetch records that have <code>harmonic_weight IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByHarmonicWeight(java.math.BigDecimal... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.HARMONIC_WEIGHT, values);
	}

	/**
	 * Fetch records that have <code>final_suggestion_order_calculated IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByFinalSuggestionOrderCalculated(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.FINAL_SUGGESTION_ORDER_CALCULATED, values);
	}

	/**
	 * Fetch records that have <code>first_preference_votes IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByFirstPreferenceVotes(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.FIRST_PREFERENCE_VOTES, values);
	}

	/**
	 * Fetch records that have <code>positive_votes IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByPositiveVotes(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.POSITIVE_VOTES, values);
	}

	/**
	 * Fetch records that have <code>negative_votes IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByNegativeVotes(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.NEGATIVE_VOTES, values);
	}

	/**
	 * Fetch records that have <code>direct_majority IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByDirectMajority(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.DIRECT_MAJORITY, values);
	}

	/**
	 * Fetch records that have <code>indirect_majority IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByIndirectMajority(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.INDIRECT_MAJORITY, values);
	}

	/**
	 * Fetch records that have <code>schulze_rank IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchBySchulzeRank(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.SCHULZE_RANK, values);
	}

	/**
	 * Fetch records that have <code>better_than_status_quo IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByBetterThanStatusQuo(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.BETTER_THAN_STATUS_QUO, values);
	}

	/**
	 * Fetch records that have <code>worse_than_status_quo IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByWorseThanStatusQuo(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.WORSE_THAN_STATUS_QUO, values);
	}

	/**
	 * Fetch records that have <code>reverse_beat_path IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByReverseBeatPath(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.REVERSE_BEAT_PATH, values);
	}

	/**
	 * Fetch records that have <code>multistage_majority IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByMultistageMajority(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.MULTISTAGE_MAJORITY, values);
	}

	/**
	 * Fetch records that have <code>eligible IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByEligible(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.ELIGIBLE, values);
	}

	/**
	 * Fetch records that have <code>winner IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByWinner(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.WINNER, values);
	}

	/**
	 * Fetch records that have <code>rank IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByRank(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.RANK, values);
	}

	/**
	 * Fetch records that have <code>text_search_data IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Initiative> fetchByTextSearchData(java.lang.Object... values) {
		return fetch(org.liquidfeedback.generated.tables.Initiative.INITIATIVE.TEXT_SEARCH_DATA, values);
	}
}
