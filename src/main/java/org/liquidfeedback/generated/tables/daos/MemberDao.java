/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberDao extends org.jooq.impl.DAOImpl<org.liquidfeedback.generated.tables.records.MemberRecord, org.liquidfeedback.generated.tables.pojos.Member, java.lang.Integer> {

	/**
	 * Create a new MemberDao without any configuration
	 */
	public MemberDao() {
		super(org.liquidfeedback.generated.tables.Member.MEMBER, org.liquidfeedback.generated.tables.pojos.Member.class);
	}

	/**
	 * Create a new MemberDao with an attached configuration
	 */
	public MemberDao(org.jooq.Configuration configuration) {
		super(org.liquidfeedback.generated.tables.Member.MEMBER, org.liquidfeedback.generated.tables.pojos.Member.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(org.liquidfeedback.generated.tables.pojos.Member object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchById(java.lang.Integer... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public org.liquidfeedback.generated.tables.pojos.Member fetchOneById(java.lang.Integer value) {
		return fetchOne(org.liquidfeedback.generated.tables.Member.MEMBER.ID, value);
	}

	/**
	 * Fetch records that have <code>created IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByCreated(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.CREATED, values);
	}

	/**
	 * Fetch records that have <code>invite_code IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByInviteCode(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.INVITE_CODE, values);
	}

	/**
	 * Fetch a unique record that has <code>invite_code = value</code>
	 */
	public org.liquidfeedback.generated.tables.pojos.Member fetchOneByInviteCode(java.lang.String value) {
		return fetchOne(org.liquidfeedback.generated.tables.Member.MEMBER.INVITE_CODE, value);
	}

	/**
	 * Fetch records that have <code>invite_code_expiry IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByInviteCodeExpiry(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.INVITE_CODE_EXPIRY, values);
	}

	/**
	 * Fetch records that have <code>admin_comment IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByAdminComment(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.ADMIN_COMMENT, values);
	}

	/**
	 * Fetch records that have <code>activated IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByActivated(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.ACTIVATED, values);
	}

	/**
	 * Fetch records that have <code>last_activity IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByLastActivity(java.sql.Date... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.LAST_ACTIVITY, values);
	}

	/**
	 * Fetch records that have <code>last_login IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByLastLogin(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.LAST_LOGIN, values);
	}

	/**
	 * Fetch records that have <code>last_delegation_check IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByLastDelegationCheck(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.LAST_DELEGATION_CHECK, values);
	}

	/**
	 * Fetch records that have <code>login IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByLogin(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.LOGIN, values);
	}

	/**
	 * Fetch a unique record that has <code>login = value</code>
	 */
	public org.liquidfeedback.generated.tables.pojos.Member fetchOneByLogin(java.lang.String value) {
		return fetchOne(org.liquidfeedback.generated.tables.Member.MEMBER.LOGIN, value);
	}

	/**
	 * Fetch records that have <code>password IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByPassword(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.PASSWORD, values);
	}

	/**
	 * Fetch records that have <code>authority IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByAuthority(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.AUTHORITY, values);
	}

	/**
	 * Fetch records that have <code>authority_uid IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByAuthorityUid(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.AUTHORITY_UID, values);
	}

	/**
	 * Fetch records that have <code>authority_login IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByAuthorityLogin(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.AUTHORITY_LOGIN, values);
	}

	/**
	 * Fetch records that have <code>locked IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByLocked(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.LOCKED, values);
	}

	/**
	 * Fetch records that have <code>active IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByActive(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.ACTIVE, values);
	}

	/**
	 * Fetch records that have <code>admin IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByAdmin(java.lang.Boolean... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.ADMIN, values);
	}

	/**
	 * Fetch records that have <code>lang IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByLang(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.LANG, values);
	}

	/**
	 * Fetch records that have <code>notify_email IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByNotifyEmail(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.NOTIFY_EMAIL, values);
	}

	/**
	 * Fetch records that have <code>notify_email_unconfirmed IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByNotifyEmailUnconfirmed(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.NOTIFY_EMAIL_UNCONFIRMED, values);
	}

	/**
	 * Fetch records that have <code>notify_email_secret IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByNotifyEmailSecret(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.NOTIFY_EMAIL_SECRET, values);
	}

	/**
	 * Fetch a unique record that has <code>notify_email_secret = value</code>
	 */
	public org.liquidfeedback.generated.tables.pojos.Member fetchOneByNotifyEmailSecret(java.lang.String value) {
		return fetchOne(org.liquidfeedback.generated.tables.Member.MEMBER.NOTIFY_EMAIL_SECRET, value);
	}

	/**
	 * Fetch records that have <code>notify_email_secret_expiry IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByNotifyEmailSecretExpiry(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.NOTIFY_EMAIL_SECRET_EXPIRY, values);
	}

	/**
	 * Fetch records that have <code>notify_email_lock_expiry IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByNotifyEmailLockExpiry(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.NOTIFY_EMAIL_LOCK_EXPIRY, values);
	}

	/**
	 * Fetch records that have <code>notify_level IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByNotifyLevel(org.liquidfeedback.generated.enums.NotifyLevel... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.NOTIFY_LEVEL, values);
	}

	/**
	 * Fetch records that have <code>login_recovery_expiry IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByLoginRecoveryExpiry(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.LOGIN_RECOVERY_EXPIRY, values);
	}

	/**
	 * Fetch records that have <code>password_reset_secret IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByPasswordResetSecret(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.PASSWORD_RESET_SECRET, values);
	}

	/**
	 * Fetch a unique record that has <code>password_reset_secret = value</code>
	 */
	public org.liquidfeedback.generated.tables.pojos.Member fetchOneByPasswordResetSecret(java.lang.String value) {
		return fetchOne(org.liquidfeedback.generated.tables.Member.MEMBER.PASSWORD_RESET_SECRET, value);
	}

	/**
	 * Fetch records that have <code>password_reset_secret_expiry IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByPasswordResetSecretExpiry(java.sql.Timestamp... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.PASSWORD_RESET_SECRET_EXPIRY, values);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByName(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.NAME, values);
	}

	/**
	 * Fetch a unique record that has <code>name = value</code>
	 */
	public org.liquidfeedback.generated.tables.pojos.Member fetchOneByName(java.lang.String value) {
		return fetchOne(org.liquidfeedback.generated.tables.Member.MEMBER.NAME, value);
	}

	/**
	 * Fetch records that have <code>identification IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByIdentification(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.IDENTIFICATION, values);
	}

	/**
	 * Fetch a unique record that has <code>identification = value</code>
	 */
	public org.liquidfeedback.generated.tables.pojos.Member fetchOneByIdentification(java.lang.String value) {
		return fetchOne(org.liquidfeedback.generated.tables.Member.MEMBER.IDENTIFICATION, value);
	}

	/**
	 * Fetch records that have <code>authentication IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByAuthentication(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.AUTHENTICATION, values);
	}

	/**
	 * Fetch records that have <code>organizational_unit IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByOrganizationalUnit(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.ORGANIZATIONAL_UNIT, values);
	}

	/**
	 * Fetch records that have <code>internal_posts IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByInternalPosts(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.INTERNAL_POSTS, values);
	}

	/**
	 * Fetch records that have <code>realname IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByRealname(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.REALNAME, values);
	}

	/**
	 * Fetch records that have <code>birthday IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByBirthday(java.sql.Date... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.BIRTHDAY, values);
	}

	/**
	 * Fetch records that have <code>address IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByAddress(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.ADDRESS, values);
	}

	/**
	 * Fetch records that have <code>email IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByEmail(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.EMAIL, values);
	}

	/**
	 * Fetch records that have <code>xmpp_address IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByXmppAddress(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.XMPP_ADDRESS, values);
	}

	/**
	 * Fetch records that have <code>website IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByWebsite(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.WEBSITE, values);
	}

	/**
	 * Fetch records that have <code>phone IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByPhone(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.PHONE, values);
	}

	/**
	 * Fetch records that have <code>mobile_phone IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByMobilePhone(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.MOBILE_PHONE, values);
	}

	/**
	 * Fetch records that have <code>profession IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByProfession(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.PROFESSION, values);
	}

	/**
	 * Fetch records that have <code>external_memberships IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByExternalMemberships(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.EXTERNAL_MEMBERSHIPS, values);
	}

	/**
	 * Fetch records that have <code>external_posts IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByExternalPosts(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.EXTERNAL_POSTS, values);
	}

	/**
	 * Fetch records that have <code>formatting_engine IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByFormattingEngine(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.FORMATTING_ENGINE, values);
	}

	/**
	 * Fetch records that have <code>statement IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByStatement(java.lang.String... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.STATEMENT, values);
	}

	/**
	 * Fetch records that have <code>text_search_data IN (values)</code>
	 */
	public java.util.List<org.liquidfeedback.generated.tables.pojos.Member> fetchByTextSearchData(java.lang.Object... values) {
		return fetch(org.liquidfeedback.generated.tables.Member.MEMBER.TEXT_SEARCH_DATA, values);
	}
}
