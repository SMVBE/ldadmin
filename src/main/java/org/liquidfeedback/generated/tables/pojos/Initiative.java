/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.pojos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Initiative implements org.liquidfeedback.generated.tables.interfaces.IInitiative {

	private static final long serialVersionUID = 1881854488;

	private final java.lang.Integer    issueId;
	private final java.lang.Integer    id;
	private final java.lang.String     name;
	private final java.lang.Boolean    polling;
	private final java.lang.String     discussionUrl;
	private final java.sql.Timestamp   created;
	private final java.sql.Timestamp   revoked;
	private final java.lang.Integer    revokedByMemberId;
	private final java.lang.Integer    suggestedInitiativeId;
	private final java.lang.Boolean    admitted;
	private final java.lang.Integer    supporterCount;
	private final java.lang.Integer    informedSupporterCount;
	private final java.lang.Integer    satisfiedSupporterCount;
	private final java.lang.Integer    satisfiedInformedSupporterCount;
	private final java.math.BigDecimal harmonicWeight;
	private final java.lang.Boolean    finalSuggestionOrderCalculated;
	private final java.lang.Integer    firstPreferenceVotes;
	private final java.lang.Integer    positiveVotes;
	private final java.lang.Integer    negativeVotes;
	private final java.lang.Boolean    directMajority;
	private final java.lang.Boolean    indirectMajority;
	private final java.lang.Integer    schulzeRank;
	private final java.lang.Boolean    betterThanStatusQuo;
	private final java.lang.Boolean    worseThanStatusQuo;
	private final java.lang.Boolean    reverseBeatPath;
	private final java.lang.Boolean    multistageMajority;
	private final java.lang.Boolean    eligible;
	private final java.lang.Boolean    winner;
	private final java.lang.Integer    rank;
	private final java.lang.Object     textSearchData;

	public Initiative(
		java.lang.Integer    issueId,
		java.lang.Integer    id,
		java.lang.String     name,
		java.lang.Boolean    polling,
		java.lang.String     discussionUrl,
		java.sql.Timestamp   created,
		java.sql.Timestamp   revoked,
		java.lang.Integer    revokedByMemberId,
		java.lang.Integer    suggestedInitiativeId,
		java.lang.Boolean    admitted,
		java.lang.Integer    supporterCount,
		java.lang.Integer    informedSupporterCount,
		java.lang.Integer    satisfiedSupporterCount,
		java.lang.Integer    satisfiedInformedSupporterCount,
		java.math.BigDecimal harmonicWeight,
		java.lang.Boolean    finalSuggestionOrderCalculated,
		java.lang.Integer    firstPreferenceVotes,
		java.lang.Integer    positiveVotes,
		java.lang.Integer    negativeVotes,
		java.lang.Boolean    directMajority,
		java.lang.Boolean    indirectMajority,
		java.lang.Integer    schulzeRank,
		java.lang.Boolean    betterThanStatusQuo,
		java.lang.Boolean    worseThanStatusQuo,
		java.lang.Boolean    reverseBeatPath,
		java.lang.Boolean    multistageMajority,
		java.lang.Boolean    eligible,
		java.lang.Boolean    winner,
		java.lang.Integer    rank,
		java.lang.Object     textSearchData
	) {
		this.issueId = issueId;
		this.id = id;
		this.name = name;
		this.polling = polling;
		this.discussionUrl = discussionUrl;
		this.created = created;
		this.revoked = revoked;
		this.revokedByMemberId = revokedByMemberId;
		this.suggestedInitiativeId = suggestedInitiativeId;
		this.admitted = admitted;
		this.supporterCount = supporterCount;
		this.informedSupporterCount = informedSupporterCount;
		this.satisfiedSupporterCount = satisfiedSupporterCount;
		this.satisfiedInformedSupporterCount = satisfiedInformedSupporterCount;
		this.harmonicWeight = harmonicWeight;
		this.finalSuggestionOrderCalculated = finalSuggestionOrderCalculated;
		this.firstPreferenceVotes = firstPreferenceVotes;
		this.positiveVotes = positiveVotes;
		this.negativeVotes = negativeVotes;
		this.directMajority = directMajority;
		this.indirectMajority = indirectMajority;
		this.schulzeRank = schulzeRank;
		this.betterThanStatusQuo = betterThanStatusQuo;
		this.worseThanStatusQuo = worseThanStatusQuo;
		this.reverseBeatPath = reverseBeatPath;
		this.multistageMajority = multistageMajority;
		this.eligible = eligible;
		this.winner = winner;
		this.rank = rank;
		this.textSearchData = textSearchData;
	}

	@Override
	public java.lang.Integer getIssueId() {
		return this.issueId;
	}

	@Override
	public java.lang.Integer getId() {
		return this.id;
	}

	@Override
	public java.lang.String getName() {
		return this.name;
	}

	@Override
	public java.lang.Boolean getPolling() {
		return this.polling;
	}

	@Override
	public java.lang.String getDiscussionUrl() {
		return this.discussionUrl;
	}

	@Override
	public java.sql.Timestamp getCreated() {
		return this.created;
	}

	@Override
	public java.sql.Timestamp getRevoked() {
		return this.revoked;
	}

	@Override
	public java.lang.Integer getRevokedByMemberId() {
		return this.revokedByMemberId;
	}

	@Override
	public java.lang.Integer getSuggestedInitiativeId() {
		return this.suggestedInitiativeId;
	}

	@Override
	public java.lang.Boolean getAdmitted() {
		return this.admitted;
	}

	@Override
	public java.lang.Integer getSupporterCount() {
		return this.supporterCount;
	}

	@Override
	public java.lang.Integer getInformedSupporterCount() {
		return this.informedSupporterCount;
	}

	@Override
	public java.lang.Integer getSatisfiedSupporterCount() {
		return this.satisfiedSupporterCount;
	}

	@Override
	public java.lang.Integer getSatisfiedInformedSupporterCount() {
		return this.satisfiedInformedSupporterCount;
	}

	@Override
	public java.math.BigDecimal getHarmonicWeight() {
		return this.harmonicWeight;
	}

	@Override
	public java.lang.Boolean getFinalSuggestionOrderCalculated() {
		return this.finalSuggestionOrderCalculated;
	}

	@Override
	public java.lang.Integer getFirstPreferenceVotes() {
		return this.firstPreferenceVotes;
	}

	@Override
	public java.lang.Integer getPositiveVotes() {
		return this.positiveVotes;
	}

	@Override
	public java.lang.Integer getNegativeVotes() {
		return this.negativeVotes;
	}

	@Override
	public java.lang.Boolean getDirectMajority() {
		return this.directMajority;
	}

	@Override
	public java.lang.Boolean getIndirectMajority() {
		return this.indirectMajority;
	}

	@Override
	public java.lang.Integer getSchulzeRank() {
		return this.schulzeRank;
	}

	@Override
	public java.lang.Boolean getBetterThanStatusQuo() {
		return this.betterThanStatusQuo;
	}

	@Override
	public java.lang.Boolean getWorseThanStatusQuo() {
		return this.worseThanStatusQuo;
	}

	@Override
	public java.lang.Boolean getReverseBeatPath() {
		return this.reverseBeatPath;
	}

	@Override
	public java.lang.Boolean getMultistageMajority() {
		return this.multistageMajority;
	}

	@Override
	public java.lang.Boolean getEligible() {
		return this.eligible;
	}

	@Override
	public java.lang.Boolean getWinner() {
		return this.winner;
	}

	@Override
	public java.lang.Integer getRank() {
		return this.rank;
	}

	@Override
	public java.lang.Object getTextSearchData() {
		return this.textSearchData;
	}
}
