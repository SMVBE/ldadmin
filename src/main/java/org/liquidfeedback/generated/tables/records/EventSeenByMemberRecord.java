/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventSeenByMemberRecord extends org.jooq.impl.TableRecordImpl<org.liquidfeedback.generated.tables.records.EventSeenByMemberRecord> implements org.jooq.Record11<java.lang.Integer, org.liquidfeedback.generated.enums.NotifyLevel, java.lang.Long, java.sql.Timestamp, org.liquidfeedback.generated.enums.EventType, java.lang.Integer, java.lang.Integer, org.liquidfeedback.generated.enums.IssueState, java.lang.Integer, java.lang.Long, java.lang.Long>, org.liquidfeedback.generated.tables.interfaces.IEventSeenByMember {

	private static final long serialVersionUID = -1062335997;

	/**
	 * Setter for <code>event_seen_by_member.seen_by_member_id</code>.
	 */
	public void setSeenByMemberId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.seen_by_member_id</code>.
	 */
	@Override
	public java.lang.Integer getSeenByMemberId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>event_seen_by_member.notify_level</code>.
	 */
	public void setNotifyLevel(org.liquidfeedback.generated.enums.NotifyLevel value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.notify_level</code>.
	 */
	@Override
	public org.liquidfeedback.generated.enums.NotifyLevel getNotifyLevel() {
		return (org.liquidfeedback.generated.enums.NotifyLevel) getValue(1);
	}

	/**
	 * Setter for <code>event_seen_by_member.id</code>.
	 */
	public void setId(java.lang.Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.id</code>.
	 */
	@Override
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>event_seen_by_member.occurrence</code>.
	 */
	public void setOccurrence(java.sql.Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.occurrence</code>.
	 */
	@Override
	public java.sql.Timestamp getOccurrence() {
		return (java.sql.Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>event_seen_by_member.event</code>.
	 */
	public void setEvent(org.liquidfeedback.generated.enums.EventType value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.event</code>.
	 */
	@Override
	public org.liquidfeedback.generated.enums.EventType getEvent() {
		return (org.liquidfeedback.generated.enums.EventType) getValue(4);
	}

	/**
	 * Setter for <code>event_seen_by_member.member_id</code>.
	 */
	public void setMemberId(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.member_id</code>.
	 */
	@Override
	public java.lang.Integer getMemberId() {
		return (java.lang.Integer) getValue(5);
	}

	/**
	 * Setter for <code>event_seen_by_member.issue_id</code>.
	 */
	public void setIssueId(java.lang.Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.issue_id</code>.
	 */
	@Override
	public java.lang.Integer getIssueId() {
		return (java.lang.Integer) getValue(6);
	}

	/**
	 * Setter for <code>event_seen_by_member.state</code>.
	 */
	public void setState(org.liquidfeedback.generated.enums.IssueState value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.state</code>.
	 */
	@Override
	public org.liquidfeedback.generated.enums.IssueState getState() {
		return (org.liquidfeedback.generated.enums.IssueState) getValue(7);
	}

	/**
	 * Setter for <code>event_seen_by_member.initiative_id</code>.
	 */
	public void setInitiativeId(java.lang.Integer value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.initiative_id</code>.
	 */
	@Override
	public java.lang.Integer getInitiativeId() {
		return (java.lang.Integer) getValue(8);
	}

	/**
	 * Setter for <code>event_seen_by_member.draft_id</code>.
	 */
	public void setDraftId(java.lang.Long value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.draft_id</code>.
	 */
	@Override
	public java.lang.Long getDraftId() {
		return (java.lang.Long) getValue(9);
	}

	/**
	 * Setter for <code>event_seen_by_member.suggestion_id</code>.
	 */
	public void setSuggestionId(java.lang.Long value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>event_seen_by_member.suggestion_id</code>.
	 */
	@Override
	public java.lang.Long getSuggestionId() {
		return (java.lang.Long) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.lang.Integer, org.liquidfeedback.generated.enums.NotifyLevel, java.lang.Long, java.sql.Timestamp, org.liquidfeedback.generated.enums.EventType, java.lang.Integer, java.lang.Integer, org.liquidfeedback.generated.enums.IssueState, java.lang.Integer, java.lang.Long, java.lang.Long> fieldsRow() {
		return (org.jooq.Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.lang.Integer, org.liquidfeedback.generated.enums.NotifyLevel, java.lang.Long, java.sql.Timestamp, org.liquidfeedback.generated.enums.EventType, java.lang.Integer, java.lang.Integer, org.liquidfeedback.generated.enums.IssueState, java.lang.Integer, java.lang.Long, java.lang.Long> valuesRow() {
		return (org.jooq.Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.SEEN_BY_MEMBER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.liquidfeedback.generated.enums.NotifyLevel> field2() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.NOTIFY_LEVEL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field4() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.OCCURRENCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.liquidfeedback.generated.enums.EventType> field5() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.EVENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field6() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.MEMBER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field7() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.ISSUE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.liquidfeedback.generated.enums.IssueState> field8() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field9() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.INITIATIVE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field10() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.DRAFT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field11() {
		return org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER.SUGGESTION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getSeenByMemberId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.enums.NotifyLevel value2() {
		return getNotifyLevel();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value4() {
		return getOccurrence();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.enums.EventType value5() {
		return getEvent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value6() {
		return getMemberId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value7() {
		return getIssueId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.liquidfeedback.generated.enums.IssueState value8() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value9() {
		return getInitiativeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value10() {
		return getDraftId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value11() {
		return getSuggestionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value1(java.lang.Integer value) {
		setSeenByMemberId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value2(org.liquidfeedback.generated.enums.NotifyLevel value) {
		setNotifyLevel(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value3(java.lang.Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value4(java.sql.Timestamp value) {
		setOccurrence(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value5(org.liquidfeedback.generated.enums.EventType value) {
		setEvent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value6(java.lang.Integer value) {
		setMemberId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value7(java.lang.Integer value) {
		setIssueId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value8(org.liquidfeedback.generated.enums.IssueState value) {
		setState(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value9(java.lang.Integer value) {
		setInitiativeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value10(java.lang.Long value) {
		setDraftId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord value11(java.lang.Long value) {
		setSuggestionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSeenByMemberRecord values(java.lang.Integer value1, org.liquidfeedback.generated.enums.NotifyLevel value2, java.lang.Long value3, java.sql.Timestamp value4, org.liquidfeedback.generated.enums.EventType value5, java.lang.Integer value6, java.lang.Integer value7, org.liquidfeedback.generated.enums.IssueState value8, java.lang.Integer value9, java.lang.Long value10, java.lang.Long value11) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EventSeenByMemberRecord
	 */
	public EventSeenByMemberRecord() {
		super(org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER);
	}

	/**
	 * Create a detached, initialised EventSeenByMemberRecord
	 */
	public EventSeenByMemberRecord(java.lang.Integer seenByMemberId, org.liquidfeedback.generated.enums.NotifyLevel notifyLevel, java.lang.Long id, java.sql.Timestamp occurrence, org.liquidfeedback.generated.enums.EventType event, java.lang.Integer memberId, java.lang.Integer issueId, org.liquidfeedback.generated.enums.IssueState state, java.lang.Integer initiativeId, java.lang.Long draftId, java.lang.Long suggestionId) {
		super(org.liquidfeedback.generated.tables.EventSeenByMember.EVENT_SEEN_BY_MEMBER);

		setValue(0, seenByMemberId);
		setValue(1, notifyLevel);
		setValue(2, id);
		setValue(3, occurrence);
		setValue(4, event);
		setValue(5, memberId);
		setValue(6, issueId);
		setValue(7, state);
		setValue(8, initiativeId);
		setValue(9, draftId);
		setValue(10, suggestionId);
	}
}
