/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LiquidFeedbackVersionRecord extends org.jooq.impl.TableRecordImpl<org.liquidfeedback.generated.tables.records.LiquidFeedbackVersionRecord> implements org.jooq.Record4<java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer>, org.liquidfeedback.generated.tables.interfaces.ILiquidFeedbackVersion {

	private static final long serialVersionUID = 1283416545;

	/**
	 * Setter for <code>liquid_feedback_version.string</code>.
	 */
	public void setString(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>liquid_feedback_version.string</code>.
	 */
	@Override
	public java.lang.String getString() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>liquid_feedback_version.major</code>.
	 */
	public void setMajor(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>liquid_feedback_version.major</code>.
	 */
	@Override
	public java.lang.Integer getMajor() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>liquid_feedback_version.minor</code>.
	 */
	public void setMinor(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>liquid_feedback_version.minor</code>.
	 */
	@Override
	public java.lang.Integer getMinor() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>liquid_feedback_version.revision</code>.
	 */
	public void setRevision(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>liquid_feedback_version.revision</code>.
	 */
	@Override
	public java.lang.Integer getRevision() {
		return (java.lang.Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return org.liquidfeedback.generated.tables.LiquidFeedbackVersion.LIQUID_FEEDBACK_VERSION.STRING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return org.liquidfeedback.generated.tables.LiquidFeedbackVersion.LIQUID_FEEDBACK_VERSION.MAJOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return org.liquidfeedback.generated.tables.LiquidFeedbackVersion.LIQUID_FEEDBACK_VERSION.MINOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return org.liquidfeedback.generated.tables.LiquidFeedbackVersion.LIQUID_FEEDBACK_VERSION.REVISION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getString();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getMajor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getMinor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getRevision();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LiquidFeedbackVersionRecord value1(java.lang.String value) {
		setString(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LiquidFeedbackVersionRecord value2(java.lang.Integer value) {
		setMajor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LiquidFeedbackVersionRecord value3(java.lang.Integer value) {
		setMinor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LiquidFeedbackVersionRecord value4(java.lang.Integer value) {
		setRevision(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LiquidFeedbackVersionRecord values(java.lang.String value1, java.lang.Integer value2, java.lang.Integer value3, java.lang.Integer value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LiquidFeedbackVersionRecord
	 */
	public LiquidFeedbackVersionRecord() {
		super(org.liquidfeedback.generated.tables.LiquidFeedbackVersion.LIQUID_FEEDBACK_VERSION);
	}

	/**
	 * Create a detached, initialised LiquidFeedbackVersionRecord
	 */
	public LiquidFeedbackVersionRecord(java.lang.String string, java.lang.Integer major, java.lang.Integer minor, java.lang.Integer revision) {
		super(org.liquidfeedback.generated.tables.LiquidFeedbackVersion.LIQUID_FEEDBACK_VERSION);

		setValue(0, string);
		setValue(1, major);
		setValue(2, minor);
		setValue(3, revision);
	}
}
