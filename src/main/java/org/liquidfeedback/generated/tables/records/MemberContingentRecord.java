/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberContingentRecord extends org.jooq.impl.TableRecordImpl<org.liquidfeedback.generated.tables.records.MemberContingentRecord> implements org.jooq.Record7<java.lang.Integer, java.lang.Boolean, java.lang.Object, java.lang.Long, java.lang.Integer, java.lang.Long, java.lang.Integer>, org.liquidfeedback.generated.tables.interfaces.IMemberContingent {

	private static final long serialVersionUID = 284387682;

	/**
	 * Setter for <code>member_contingent.member_id</code>.
	 */
	public void setMemberId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>member_contingent.member_id</code>.
	 */
	@Override
	public java.lang.Integer getMemberId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>member_contingent.polling</code>.
	 */
	public void setPolling(java.lang.Boolean value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>member_contingent.polling</code>.
	 */
	@Override
	public java.lang.Boolean getPolling() {
		return (java.lang.Boolean) getValue(1);
	}

	/**
	 * Setter for <code>member_contingent.time_frame</code>.
	 */
	public void setTimeFrame(java.lang.Object value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>member_contingent.time_frame</code>.
	 */
	@Override
	public java.lang.Object getTimeFrame() {
		return (java.lang.Object) getValue(2);
	}

	/**
	 * Setter for <code>member_contingent.text_entry_count</code>.
	 */
	public void setTextEntryCount(java.lang.Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>member_contingent.text_entry_count</code>.
	 */
	@Override
	public java.lang.Long getTextEntryCount() {
		return (java.lang.Long) getValue(3);
	}

	/**
	 * Setter for <code>member_contingent.text_entry_limit</code>.
	 */
	public void setTextEntryLimit(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>member_contingent.text_entry_limit</code>.
	 */
	@Override
	public java.lang.Integer getTextEntryLimit() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>member_contingent.initiative_count</code>.
	 */
	public void setInitiativeCount(java.lang.Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>member_contingent.initiative_count</code>.
	 */
	@Override
	public java.lang.Long getInitiativeCount() {
		return (java.lang.Long) getValue(5);
	}

	/**
	 * Setter for <code>member_contingent.initiative_limit</code>.
	 */
	public void setInitiativeLimit(java.lang.Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>member_contingent.initiative_limit</code>.
	 */
	@Override
	public java.lang.Integer getInitiativeLimit() {
		return (java.lang.Integer) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row7<java.lang.Integer, java.lang.Boolean, java.lang.Object, java.lang.Long, java.lang.Integer, java.lang.Long, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row7<java.lang.Integer, java.lang.Boolean, java.lang.Object, java.lang.Long, java.lang.Integer, java.lang.Long, java.lang.Integer> valuesRow() {
		return (org.jooq.Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.liquidfeedback.generated.tables.MemberContingent.MEMBER_CONTINGENT.MEMBER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field2() {
		return org.liquidfeedback.generated.tables.MemberContingent.MEMBER_CONTINGENT.POLLING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Object> field3() {
		return org.liquidfeedback.generated.tables.MemberContingent.MEMBER_CONTINGENT.TIME_FRAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field4() {
		return org.liquidfeedback.generated.tables.MemberContingent.MEMBER_CONTINGENT.TEXT_ENTRY_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return org.liquidfeedback.generated.tables.MemberContingent.MEMBER_CONTINGENT.TEXT_ENTRY_LIMIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field6() {
		return org.liquidfeedback.generated.tables.MemberContingent.MEMBER_CONTINGENT.INITIATIVE_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field7() {
		return org.liquidfeedback.generated.tables.MemberContingent.MEMBER_CONTINGENT.INITIATIVE_LIMIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getMemberId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value2() {
		return getPolling();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Object value3() {
		return getTimeFrame();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value4() {
		return getTextEntryCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getTextEntryLimit();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value6() {
		return getInitiativeCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value7() {
		return getInitiativeLimit();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberContingentRecord value1(java.lang.Integer value) {
		setMemberId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberContingentRecord value2(java.lang.Boolean value) {
		setPolling(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberContingentRecord value3(java.lang.Object value) {
		setTimeFrame(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberContingentRecord value4(java.lang.Long value) {
		setTextEntryCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberContingentRecord value5(java.lang.Integer value) {
		setTextEntryLimit(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberContingentRecord value6(java.lang.Long value) {
		setInitiativeCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberContingentRecord value7(java.lang.Integer value) {
		setInitiativeLimit(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberContingentRecord values(java.lang.Integer value1, java.lang.Boolean value2, java.lang.Object value3, java.lang.Long value4, java.lang.Integer value5, java.lang.Long value6, java.lang.Integer value7) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MemberContingentRecord
	 */
	public MemberContingentRecord() {
		super(org.liquidfeedback.generated.tables.MemberContingent.MEMBER_CONTINGENT);
	}

	/**
	 * Create a detached, initialised MemberContingentRecord
	 */
	public MemberContingentRecord(java.lang.Integer memberId, java.lang.Boolean polling, java.lang.Object timeFrame, java.lang.Long textEntryCount, java.lang.Integer textEntryLimit, java.lang.Long initiativeCount, java.lang.Integer initiativeLimit) {
		super(org.liquidfeedback.generated.tables.MemberContingent.MEMBER_CONTINGENT);

		setValue(0, memberId);
		setValue(1, polling);
		setValue(2, timeFrame);
		setValue(3, textEntryCount);
		setValue(4, textEntryLimit);
		setValue(5, initiativeCount);
		setValue(6, initiativeLimit);
	}
}
