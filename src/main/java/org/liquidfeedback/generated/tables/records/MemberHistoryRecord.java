/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberHistoryRecord extends org.jooq.impl.UpdatableRecordImpl<org.liquidfeedback.generated.tables.records.MemberHistoryRecord> implements org.jooq.Record5<java.lang.Long, java.lang.Integer, java.sql.Timestamp, java.lang.Boolean, java.lang.String>, org.liquidfeedback.generated.tables.interfaces.IMemberHistory {

	private static final long serialVersionUID = 487777385;

	/**
	 * Setter for <code>member_history.id</code>.
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>member_history.id</code>.
	 */
	@Override
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>member_history.member_id</code>.
	 */
	public void setMemberId(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>member_history.member_id</code>.
	 */
	@Override
	public java.lang.Integer getMemberId() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>member_history.until</code>.
	 */
	public void setUntil(java.sql.Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>member_history.until</code>.
	 */
	@Override
	public java.sql.Timestamp getUntil() {
		return (java.sql.Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>member_history.active</code>.
	 */
	public void setActive(java.lang.Boolean value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>member_history.active</code>.
	 */
	@Override
	public java.lang.Boolean getActive() {
		return (java.lang.Boolean) getValue(3);
	}

	/**
	 * Setter for <code>member_history.name</code>.
	 */
	public void setName(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>member_history.name</code>.
	 */
	@Override
	public java.lang.String getName() {
		return (java.lang.String) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<java.lang.Long, java.lang.Integer, java.sql.Timestamp, java.lang.Boolean, java.lang.String> fieldsRow() {
		return (org.jooq.Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<java.lang.Long, java.lang.Integer, java.sql.Timestamp, java.lang.Boolean, java.lang.String> valuesRow() {
		return (org.jooq.Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.liquidfeedback.generated.tables.MemberHistory.MEMBER_HISTORY.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return org.liquidfeedback.generated.tables.MemberHistory.MEMBER_HISTORY.MEMBER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field3() {
		return org.liquidfeedback.generated.tables.MemberHistory.MEMBER_HISTORY.UNTIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field4() {
		return org.liquidfeedback.generated.tables.MemberHistory.MEMBER_HISTORY.ACTIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return org.liquidfeedback.generated.tables.MemberHistory.MEMBER_HISTORY.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getMemberId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value3() {
		return getUntil();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value4() {
		return getActive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberHistoryRecord value1(java.lang.Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberHistoryRecord value2(java.lang.Integer value) {
		setMemberId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberHistoryRecord value3(java.sql.Timestamp value) {
		setUntil(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberHistoryRecord value4(java.lang.Boolean value) {
		setActive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberHistoryRecord value5(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemberHistoryRecord values(java.lang.Long value1, java.lang.Integer value2, java.sql.Timestamp value3, java.lang.Boolean value4, java.lang.String value5) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MemberHistoryRecord
	 */
	public MemberHistoryRecord() {
		super(org.liquidfeedback.generated.tables.MemberHistory.MEMBER_HISTORY);
	}

	/**
	 * Create a detached, initialised MemberHistoryRecord
	 */
	public MemberHistoryRecord(java.lang.Long id, java.lang.Integer memberId, java.sql.Timestamp until, java.lang.Boolean active, java.lang.String name) {
		super(org.liquidfeedback.generated.tables.MemberHistory.MEMBER_HISTORY);

		setValue(0, id);
		setValue(1, memberId);
		setValue(2, until);
		setValue(3, active);
		setValue(4, name);
	}
}
