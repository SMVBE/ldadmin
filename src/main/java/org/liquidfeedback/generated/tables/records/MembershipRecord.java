/**
 * This class is generated by jOOQ
 */
package org.liquidfeedback.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MembershipRecord extends org.jooq.impl.UpdatableRecordImpl<org.liquidfeedback.generated.tables.records.MembershipRecord> implements org.jooq.Record2<java.lang.Integer, java.lang.Integer>, org.liquidfeedback.generated.tables.interfaces.IMembership {

	private static final long serialVersionUID = -1931879253;

	/**
	 * Setter for <code>membership.area_id</code>.
	 */
	public void setAreaId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>membership.area_id</code>.
	 */
	@Override
	public java.lang.Integer getAreaId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>membership.member_id</code>.
	 */
	public void setMemberId(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>membership.member_id</code>.
	 */
	@Override
	public java.lang.Integer getMemberId() {
		return (java.lang.Integer) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record2<java.lang.Integer, java.lang.Integer> key() {
		return (org.jooq.Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, java.lang.Integer> valuesRow() {
		return (org.jooq.Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.liquidfeedback.generated.tables.Membership.MEMBERSHIP.AREA_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return org.liquidfeedback.generated.tables.Membership.MEMBERSHIP.MEMBER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getAreaId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getMemberId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MembershipRecord value1(java.lang.Integer value) {
		setAreaId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MembershipRecord value2(java.lang.Integer value) {
		setMemberId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MembershipRecord values(java.lang.Integer value1, java.lang.Integer value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MembershipRecord
	 */
	public MembershipRecord() {
		super(org.liquidfeedback.generated.tables.Membership.MEMBERSHIP);
	}

	/**
	 * Create a detached, initialised MembershipRecord
	 */
	public MembershipRecord(java.lang.Integer areaId, java.lang.Integer memberId) {
		super(org.liquidfeedback.generated.tables.Membership.MEMBERSHIP);

		setValue(0, areaId);
		setValue(1, memberId);
	}
}
