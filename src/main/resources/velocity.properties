# Prevent velocity.log from getting written to current directory
# http://issues.appfuse.org/browse/APF-597
#runtime.log.logsystem.class=org.apache.velocity.runtime.log.Log4JLogChute
#runtime.log.logsystem.log4j.category=org.apache.velocity

# Prevent ResourceNotFoundException with Velocity 1.7
velocimacro.library = net/sf/navigator/displayer/globalMacros.vm
velocimacro.library.autoreload = true


##  prpos

runtime.log.invalid.references=true
# specific logger for velocity
#runtime.log.logsystem.class=org.apache.velocity.runtime.log.Log4JLogChute 
#runtime.log.logsystem.log4j.category=DEBUG
runtime.log.logsystem.class=org.apache.velocity.runtime.log.SimpleLog4JLogSystem
runtime.log.logsystem.log4j.category=org.apache.velocity

eventhandler.methodexception.class=org.apache.velocity.app.event.implement.PrintExceptions
eventhandler.methodexception.message=true
eventhandler.methodexception.stacktrace=true
eventhandler.invalidreferences.class=org.apache.velocity.app.event.implement.ReportInvalidReferences

# Resource management
resource.manager.logwhenfound=true

resource.loader=class,file

class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
# true for production
class.resource.loader.cache=false
# when true the check in between to reload of the template
class.resource.loader.modificationCheckInterval=1

file.resource.loader.class=org.apache.velocity.runtime.resource.loader.FileResourceLoader
file.resource.loader.cache=false
file.resource.loader.modificationCheckInterval=1

 
velocimacro.permissions.allow.inline=true
velocimacro.permissions.allow.inline.to.replace.global=true

# Controls 'private' templates namespaces for Velocimacros. When true, a #macro() directive in a template
# creates a Velocimacro that is accessable only from the defining template. This means that Velocimacros
# cannot be shared unless they are in the global or local library loaded at startup. (See above.) It also
# means that templates cannot interfere with each other. This property also allows a technique where there
# is a 'default' Velocimacro definition in the global or local library, and a template can 'override' the 
# implementation for use within that template. This occurrs because when this property is true, the template's
# namespace is searched for a Velocimacro before the global namespace, therefore allowing the override mechanism.
velocimacro.permissions.allow.inline.local.scope=true

evaluate.provide.scope.control=false

# should be false for production and only works if the file.resource.loader.cache and class.resource.loader.cache are set to false
velocimacro.library.autoreload=true

runtime.introspector.uberspect=org.apache.velocity.util.introspection.SecureUberspector



